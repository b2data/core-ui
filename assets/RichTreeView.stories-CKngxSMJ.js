import{r as T,j as S,h as J,i as Zt,l as ne,c as j,R as en}from"./iframe-BjsjcTCH.js";import{E as tn,c as C,u as q,S as nn,a as Me,f as an,b as rn}from"./EventManager-BfTL-EYO.js";import{P as l}from"./index-BqUcDmpy.js";import{u as kt}from"./useThemeProps-5orkHAQK.js";import{g as dt}from"./generateUtilityClasses-DDbjFgb8.js";import{g as ut}from"./generateUtilityClass-BtcU_pBl.js";import{u as xe}from"./useForkRef-CFOv3ZhY.js";import{u as N}from"./useEventCallback-Cx1VukeI.js";import{s as F,c as ct,a as pt}from"./styled-B_VYI8z9.js";import{u as O}from"./useSlotProps-B8t0lEUz.js";import{e as B,r as xt}from"./mergeSlotProps-Bba1iLBA.js";import{c as Mt}from"./createSvgIcon-BWDMKnaQ.js";import{C as on}from"./Collapse-DoHhn7Rv.js";import{C as sn}from"./CircularProgress-D0bWzO0z.js";import{C as ln}from"./Checkbox-Dk45w6Zy.js";import{a as Vt}from"./useTimeout-CGfVXgdi.js";import{B as Lt}from"./Box-DHB9hgUt.js";import{v as dn}from"./v4-BKrj-4V8.js";import"./preload-helper-D9Z9MdNV.js";import"./useThemeProps-DionEAg3.js";import"./getThemeProps-FiYinGev.js";import"./isHostComponent-DVu5iVWx.js";import"./memoTheme-BkiB6XT-.js";import"./useTheme-Bdxx-ZzA.js";import"./utils-C829QIR_.js";import"./TransitionGroupContext-DktGN6vV.js";import"./index-B6TwdEj4.js";import"./index-SVAzG-T_.js";import"./createSimplePaletteValueFilter-bm0fmN_7.js";import"./SwitchBase-B4Ost8d5.js";import"./useFormControl-DV89jgTs.js";import"./useSlot-_7UiI0BH.js";import"./useControlled-U77RKmuN.js";import"./ButtonBase-CkJtUOr4.js";import"./isFocusVisible-B8k4qzLc.js";import"./mergeSlotProps-Dw6Vk27m.js";function un(e,t,n,a,u){return null}function Dt(e){return kt}function cn(e){return ut("MuiSimpleTreeView",e)}dt("MuiSimpleTreeView",["root","item","itemContent","itemGroupTransition","itemIconContainer","itemLabel","itemCheckbox"]);const vt={};function St(e,t){const n=T.useRef(vt);return n.current===vt&&(n.current=e(t)),n}const pn=e=>e.isPropagationStopped!==void 0,Nt=()=>{const[e]=T.useState(()=>new tn),t=T.useCallback((...a)=>{const[u,d,h={}]=a;h.defaultMuiPrevented=!1,!(pn(h)&&h.isPropagationStopped())&&e.emit(u,d,h)},[e]),n=T.useCallback((a,u)=>(e.on(a,u),()=>{e.removeListener(a,u)}),[e]);return{instance:{$$publishEvent:t,$$subscribeEvent:n}}};Nt.params={};const Ot=({plugins:e})=>{const t=new Set(e);return{instance:{getAvailablePlugins:()=>t}}};Ot.params={};const le={treeId:C(e=>e.id.treeId)};let Ct=0;const mn=()=>(Ct+=1,`mui-tree-view-${Ct}`),Le=({id:e,treeId:t="",itemId:n})=>e??`${t}-${n}`,mt=({params:e,store:t})=>{T.useEffect(()=>{const a=t.state.id;e.id===a.providedTreeId&&a.treeId!==void 0||t.set("id",{...a,treeId:e.id??mn()})},[t,e.id]);const n=q(t,le.treeId);return{getRootProps:()=>({id:n})}};mt.params={id:!0};mt.getInitialState=({id:e})=>({id:{treeId:void 0,providedTreeId:e}});const fn=[Nt,Ot,mt],hn=({props:{apiRef:e,...t},plugins:n})=>{const a=T.useMemo(()=>{const h={};return n.forEach(p=>{Object.assign(h,p.params)}),h},[n]),{forwardedProps:u,pluginParams:d}=T.useMemo(()=>{const h={},p={};Object.keys(t).forEach(o=>{const m=t[o];a[o]?h[o]=m:p[o]=m});const c=n.reduce((o,m)=>m.applyDefaultValuesToParams?m.applyDefaultValuesToParams({params:o}):o,h);return{forwardedProps:p,pluginParams:c}},[n,t,a]);return{forwardedProps:u,pluginParams:d,apiRef:e}},In=e=>{const{plugins:t,instance:n,publicAPI:a,store:u,rootRef:d}=e,h=T.useCallback(o=>{let m=null,r=null;const s=[],i={};t.forEach(I=>{if(!I.itemPlugin)return;const y=I.itemPlugin({props:o,rootRef:m,contentRef:r});y?.rootRef&&(m=y.rootRef),y?.contentRef&&(r=y.contentRef),y?.propsEnhancers&&(s.push(y.propsEnhancers),Object.keys(y.propsEnhancers).forEach(x=>{i[x]=!0}))});const f=I=>y=>{const x={};return s.forEach(V=>{const _=V[I];_!=null&&Object.assign(x,_(y))}),x},g=Object.fromEntries(Object.keys(i).map(I=>[I,f(I)]));return{contentRef:r,rootRef:m,propsEnhancers:g}},[t]),p=T.useCallback(({itemId:o,children:m,idAttribute:r})=>{let s=m;for(let i=t.length-1;i>=0;i-=1){const f=t[i];f.wrapItem&&(s=f.wrapItem({instance:n,itemId:o,children:s,idAttribute:r}))}return s},[t,n]),c=T.useCallback(({children:o})=>{let m=o;for(let r=t.length-1;r>=0;r-=1){const s=t[r];s.wrapRoot&&(m=s.wrapRoot({children:m}))}return m},[t]);return T.useMemo(()=>({runItemPlugins:h,wrapItem:p,wrapRoot:c,instance:n,publicAPI:a,store:u,rootRef:d}),[h,p,c,n,a,u,d])};function gn(e){return e.current==null&&(e.current={}),e}function yn(e){const t=T.useRef({});return e?gn(e):t}const At=({plugins:e,rootRef:t,props:n})=>{const a=T.useMemo(()=>[...fn,...e],[e]),{pluginParams:u,forwardedProps:d,apiRef:h}=hn({plugins:a,props:n}),p=St(()=>({})).current,c=yn(h),o=T.useRef(null),m=xe(o,t),r=St(()=>{const I={};for(const y of a)y.getInitialState&&Object.assign(I,y.getInitialState(u));return new nn(I)}).current,s=In({plugins:a,instance:p,publicAPI:c.current,store:r,rootRef:o}),i=[],f=I=>{const y=I({instance:p,params:u,rootRef:o,plugins:a,store:r});y.getRootProps&&i.push(y.getRootProps),y.publicAPI&&Object.assign(c.current,y.publicAPI),y.instance&&Object.assign(p,y.instance)};return a.forEach(f),{getRootProps:(I={})=>{const y={role:"tree",...d,...I,ref:m};return i.forEach(x=>{Object.assign(y,x(I))}),y},rootRef:m,contextValue:s}},Ft=T.createContext(null),G=()=>{const e=T.useContext(Ft);if(e==null)throw new Error(["MUI X: Could not find the Tree View context.","It looks like you rendered your component outside of a SimpleTreeView or RichTreeView parent component.","This can also happen if you are bundling multiple versions of the Tree View."].join(`
`));return e},Bt=T.createContext({classes:{},slots:{},slotProps:{}}),jt=()=>T.useContext(Bt),He={};function Ve(e){const{contextValue:t,classes:n=He,slots:a=He,slotProps:u=He,children:d}=e,h=T.useMemo(()=>({classes:n,slots:{collapseIcon:a.collapseIcon,expandIcon:a.expandIcon,endIcon:a.endIcon},slotProps:{collapseIcon:u.collapseIcon,expandIcon:u.expandIcon,endIcon:u.endIcon}}),[n,a.collapseIcon,a.expandIcon,a.endIcon,u.collapseIcon,u.expandIcon,u.endIcon]);return S.jsx(Ft.Provider,{value:t,children:S.jsx(Bt.Provider,{value:h,children:t.wrapRoot({children:d})})})}try{Ve.displayName="TreeViewProvider",Ve.__docgenInfo={description:"Sets up the contexts for the underlying Tree Item components.",displayName:"TreeViewProvider",props:{contextValue:{defaultValue:null,description:"",name:"contextValue",required:!0,type:{name:"TreeViewContextValue<TSignatures, []>"}},classes:{defaultValue:null,description:"",name:"classes",required:!0,type:{name:"Partial<TreeViewClasses> | undefined"}},slots:{defaultValue:null,description:"",name:"slots",required:!0,type:{name:"TreeViewSlots | undefined"}},slotProps:{defaultValue:null,description:"",name:"slotProps",required:!0,type:{name:"TreeViewSlotProps | undefined"}}}}}catch{}const ae=(e,t,n)=>{e.$$publishEvent(t,n)},U="__TREE_VIEW_ROOT_PARENT_ID__",ve=e=>{const t={};return e.forEach((n,a)=>{t[n]=a}),t},Se=(e,t)=>{if(t==null)return!1;let n=e[t];if(!n)return!1;if(n.disabled)return!0;for(;n.parentId!=null;){if(n=e[n.parentId],!n)return!1;if(n.disabled)return!0}return!1},re=T.createContext(()=>-1),bn=[],b={isLoading:C(e=>e.items.loading),error:C(e=>e.items.error),disabledItemFocusable:C(e=>e.items.disabledItemsFocusable),itemMetaLookup:C(e=>e.items.itemMetaLookup),itemMeta:C((e,t)=>e.items.itemMetaLookup[t??U]??null),itemOrderedChildrenIds:C((e,t)=>e.items.itemOrderedChildrenIdsLookup[t??U]??bn),itemModel:C((e,t)=>e.items.itemModelLookup[t]),isItemDisabled:C((e,t)=>Se(e.items.itemMetaLookup,t)),itemIndex:C((e,t)=>{const n=e.items.itemMetaLookup[t];return n==null?-1:e.items.itemChildrenIndexesLookup[n.parentId??U][n.id]}),itemParentId:C((e,t)=>e.items.itemMetaLookup[t]?.parentId??null),itemDepth:C((e,t)=>e.items.itemMetaLookup[t]?.depth??0),canItemBeFocused:C((e,t)=>e.items.disabledItemsFocusable||!Se(e.items.itemMetaLookup,t))},Tn=(e,t,n)=>{if(e==null)throw new Error(["MUI X: The Tree View component requires all items to have a unique `id` property.","Alternatively, you can use the `getItemId` prop to specify a custom id for each item.","An item was provided without id in the `items` prop:",JSON.stringify(t)].join(`
`));if(n[e]!=null)throw new Error(["MUI X: The Tree View component requires all items to have a unique `id` property.","Alternatively, you can use the `getItemId` prop to specify a custom id for each item.",`Two items were provided with the same id in the \`items\` prop: "${e}"`].join(`
`))},$e=({disabledItemsFocusable:e,items:t,isItemDisabled:n,getItemLabel:a,getItemChildren:u,getItemId:d,initialDepth:h=0,initialParentId:p=null,getChildrenCount:c,ignoreChildren:o=!1})=>{const m={},r={},s={[U]:[]},i=(g,I,y)=>{const x=d?d(g):g.id;Tn(x,g,m);const V=a?a(g):g.label;if(V==null)throw new Error(["MUI X: The Tree View component requires all items to have a `label` property.","Alternatively, you can use the `getItemLabel` prop to specify a custom label for each item.","An item was provided without label in the `items` prop:",JSON.stringify(g)].join(`
`));const _=u?u(g):g.children;m[x]={id:x,label:V,parentId:y,idAttribute:void 0,expandable:c?c(g)>0:!!_?.length,disabled:n?n(g):!1,depth:I},r[x]=g;const P=y??U;s[P]||(s[P]=[]),s[P].push(x),o||_?.forEach(A=>i(A,I+1,x))};t?.forEach(g=>i(g,h,p));const f={};return Object.keys(s).forEach(g=>{f[g]=ve(s[g])}),{disabledItemsFocusable:e,itemMetaLookup:m,itemModelLookup:r,itemOrderedChildrenIdsLookup:s,itemChildrenIndexesLookup:f}},$=({instance:e,params:t,store:n})=>{const a=T.useCallback(y=>b.itemModel(n.state,y),[n]),u=T.useCallback(y=>b.itemMeta(n.state,y)?.parentId||null,[n]),d=N(y=>{n.set("items",{...n.state.items,loading:y})}),h=N(y=>{n.set("items",{...n.state.items,error:y})}),p=N(({itemId:y,shouldBeDisabled:x})=>{if(!n.state.items.itemMetaLookup[y])return;const V={...n.state.items.itemMetaLookup};V[y]={...V[y],disabled:x??!V[y].disabled},n.set("items",{...n.state.items,itemMetaLookup:V})}),c=T.useCallback(()=>{const y=x=>{const V=b.itemModel(n.state,x),_=b.itemOrderedChildrenIds(n.state,x);return _.length>0?V.children=_.map(y):delete V.children,V};return b.itemOrderedChildrenIds(n.state,null).map(y)},[n]),o=T.useCallback(y=>b.itemOrderedChildrenIds(n.state,y),[n]),m=y=>{const x=b.itemMeta(n.state,y);if(x==null)return null;const V=Le({treeId:le.treeId(n.state),itemId:y,id:x.idAttribute});return document.getElementById(V)},r=T.useRef(!1),s=T.useCallback(()=>{r.current=!0},[]),i=T.useCallback(()=>r.current,[]),f=({items:y,parentId:x,depth:V,getChildrenCount:_})=>{if(y){const P=$e({disabledItemsFocusable:t.disabledItemsFocusable,items:y,isItemDisabled:t.isItemDisabled,getItemId:t.getItemId,getItemLabel:t.getItemLabel,getItemChildren:t.getItemChildren,getChildrenCount:_,initialDepth:V,initialParentId:x,ignoreChildren:!0});let A;x?A={itemModelLookup:{...n.state.items.itemModelLookup,...P.itemModelLookup},itemMetaLookup:{...n.state.items.itemMetaLookup,...P.itemMetaLookup},itemOrderedChildrenIdsLookup:{...P.itemOrderedChildrenIdsLookup,...n.state.items.itemOrderedChildrenIdsLookup},itemChildrenIndexesLookup:{...P.itemChildrenIndexesLookup,...n.state.items.itemChildrenIndexesLookup}}:A={itemModelLookup:P.itemModelLookup,itemMetaLookup:P.itemMetaLookup,itemOrderedChildrenIdsLookup:P.itemOrderedChildrenIdsLookup,itemChildrenIndexesLookup:P.itemChildrenIndexesLookup},Object.values(n.state.items.itemMetaLookup).forEach(E=>{A.itemMetaLookup[E.id]||ae(e,"removeItem",{id:E.id})}),n.set("items",{...n.state.items,...A})}},g=y=>{if(y==null)n.set("items",{...n.state.items,itemMetaLookup:{},itemOrderedChildrenIdsLookup:{},itemChildrenIndexesLookup:{}});else{const x=Object.keys(n.state.items.itemMetaLookup).reduce((P,A)=>{const E=n.state.items.itemMetaLookup[A];return E.parentId===y?(ae(e,"removeItem",{id:E.id}),P):{...P,[E.id]:E}},{}),V={...n.state.items.itemOrderedChildrenIdsLookup},_={...n.state.items.itemChildrenIndexesLookup};delete _[y],delete V[y],n.set("items",{...n.state.items,itemMetaLookup:x,itemOrderedChildrenIdsLookup:V,itemChildrenIndexesLookup:_})}};T.useEffect(()=>{if(e.areItemUpdatesPrevented())return;const y=$e({disabledItemsFocusable:t.disabledItemsFocusable,items:t.items,isItemDisabled:t.isItemDisabled,getItemId:t.getItemId,getItemLabel:t.getItemLabel,getItemChildren:t.getItemChildren});Object.values(n.state.items.itemMetaLookup).forEach(x=>{y.itemMetaLookup[x.id]||ae(e,"removeItem",{id:x.id})}),n.set("items",{...n.state.items,...y})},[e,n,t.items,t.disabledItemsFocusable,t.isItemDisabled,t.getItemId,t.getItemLabel,t.getItemChildren]);const I=N((y,x)=>{t.onItemClick&&t.onItemClick(y,x)});return{getRootProps:()=>({style:{"--TreeView-itemChildrenIndentation":typeof t.itemChildrenIndentation=="number"?`${t.itemChildrenIndentation}px`:t.itemChildrenIndentation}}),publicAPI:{getItem:a,getItemDOMElement:m,getItemTree:c,getItemOrderedChildrenIds:o,setIsItemDisabled:p,getParentId:u},instance:{getItemDOMElement:m,preventItemUpdates:s,areItemUpdatesPrevented:i,addItems:f,setTreeViewLoading:d,setTreeViewError:h,removeChildren:g,handleItemClick:I}}};$.getInitialState=e=>({items:{...$e({disabledItemsFocusable:e.disabledItemsFocusable,items:e.items,isItemDisabled:e.isItemDisabled,getItemId:e.getItemId,getItemLabel:e.getItemLabel,getItemChildren:e.getItemChildren}),loading:!1,error:null}});$.applyDefaultValuesToParams=({params:e})=>({...e,disabledItemsFocusable:e.disabledItemsFocusable??!1,itemChildrenIndentation:e.itemChildrenIndentation??"12px"});$.wrapRoot=({children:e})=>S.jsx(re.Provider,{value:b.itemDepth,children:e});$.params={disabledItemsFocusable:!0,items:!0,isItemDisabled:!0,getItemLabel:!0,getItemChildren:!0,getItemId:!0,onItemClick:!0,itemChildrenIndentation:!0};try{$.displayName="useTreeViewItems",$.__docgenInfo={description:"",displayName:"useTreeViewItems",props:{instance:{defaultValue:null,description:"An imperative API available for internal use. Used to access methods from other plugins.",name:"instance",required:!0,type:{name:"TreeViewUsedInstance<UseTreeViewItemsSignature>"}},params:{defaultValue:null,description:"The Tree View parameters after being processed with the default values.",name:"params",required:!0,type:{name:"TreeViewUsedParamsWithDefaults<UseTreeViewItemsSignature>"}},store:{defaultValue:null,description:"The store that can be used to access the state of other plugins.",name:"store",required:!0,type:{name:"TreeViewUsedStore<UseTreeViewItemsSignature>"}},rootRef:{defaultValue:null,description:"Reference to the root element.",name:"rootRef",required:!0,type:{name:"RefObject<HTMLUListElement | null>"}},plugins:{defaultValue:null,description:"All the plugins that are used in the tree-view.",name:"plugins",required:!0,type:{name:"TreeViewPlugin<TreeViewAnyPluginSignature>[]"}}}}}catch{}try{$.wrapRoot.displayName="useTreeViewItems.wrapRoot",$.wrapRoot.__docgenInfo={description:"",displayName:"useTreeViewItems.wrapRoot",props:{}}}catch{}try{applyDefaultValuesToParams.displayName="applyDefaultValuesToParams",applyDefaultValuesToParams.__docgenInfo={description:"A function that receives the parameters and returns them after being processed with the default values.",displayName:"applyDefaultValuesToParams",props:{}}}catch{}try{getInitialState.displayName="getInitialState",getInitialState.__docgenInfo={description:`The initial state is computed after the default values are applied.
It sets up the state for the first render.
Other state modifications have to be done in effects and so could not be applied on the initial render.`,displayName:"getInitialState",props:{}}}catch{}try{wrapItem.displayName="wrapItem",wrapItem.__docgenInfo={description:"Render function used to add React wrappers around the TreeItem.",displayName:"wrapItem",props:{}}}catch{}const Ut=()=>{},Et=Me(e=>e.expansion.expandedItems,e=>{const t=new Map;return e.forEach(n=>{t.set(n,!0)}),t}),k={expandedItemsRaw:C(e=>e.expansion.expandedItems),expandedItemsMap:Et,triggerSlot:C(e=>e.expansion.expansionTrigger),isItemExpanded:C(Et,(e,t)=>e.has(t)),isItemExpandable:C(b.itemMeta,(e,t)=>e?.expandable??!1)},zt=({isItemEditable:e,expansionTrigger:t})=>t||(e?"iconContainer":"content"),de=({instance:e,store:t,params:n})=>{Ut({controlled:n.expandedItems,defaultValue:n.defaultExpandedItems}),J(()=>{const o=zt({isItemEditable:n.isItemEditable,expansionTrigger:n.expansionTrigger});t.state.expansion.expansionTrigger!==o&&t.set("expansion",{...t.state.expansion,expansionTrigger:o})},[t,n.isItemEditable,n.expansionTrigger]);const a=(o,m)=>{n.expandedItems===void 0&&t.set("expansion",{...t.state.expansion,expandedItems:m}),n.onExpandedItemsChange?.(o,m)},u=N(()=>{a(null,[])}),d=N(({itemId:o,event:m,shouldBeExpanded:r})=>{const s=k.expandedItemsRaw(t.state);let i;r?i=[o].concat(s):i=s.filter(f=>f!==o),n.onItemExpansionToggle&&n.onItemExpansionToggle(m,o,r),a(m,i)}),h=N(({itemId:o,event:m=null,shouldBeExpanded:r})=>{const s=k.isItemExpanded(t.state,o),i=r??!s;if(s===i)return;const f={isExpansionPrevented:!1,shouldBeExpanded:i,event:m,itemId:o};ae(e,"beforeItemToggleExpansion",f),!f.isExpansionPrevented&&e.applyItemExpansion({itemId:o,event:m,shouldBeExpanded:i})}),p=N(o=>k.isItemExpandable(t.state,o)),c=(o,m)=>{const r=b.itemMeta(t.state,m);if(r==null)return;const i=b.itemOrderedChildrenIds(t.state,r.parentId).filter(g=>k.isItemExpandable(t.state,g)&&!k.isItemExpanded(t.state,g)),f=k.expandedItemsRaw(t.state).concat(i);i.length>0&&(n.onItemExpansionToggle&&i.forEach(g=>{n.onItemExpansionToggle(o,g,!0)}),a(o,f))};return J(()=>{const o=n.expandedItems;o!==void 0&&t.set("expansion",{...t.state.expansion,expandedItems:o})},[t,n.expandedItems]),{publicAPI:{setItemExpansion:h,isItemExpanded:p},instance:{setItemExpansion:h,applyItemExpansion:d,expandAllSiblings:c,resetItemExpansion:u}}},wn=[];de.applyDefaultValuesToParams=({params:e})=>({...e,defaultExpandedItems:e.defaultExpandedItems??wn});de.getInitialState=e=>({expansion:{expandedItems:e.expandedItems===void 0?e.defaultExpandedItems:e.expandedItems,expansionTrigger:zt(e)}});de.params={expandedItems:!0,defaultExpandedItems:!0,onExpandedItemsChange:!0,onItemExpansionToggle:!0,expansionTrigger:!0};const Ge=(e,t)=>{let n=t.length-1;for(;n>=0&&!b.canItemBeFocused(e,t[n]);)n-=1;if(n!==-1)return t[n]},Ht=(e,t)=>{const n=b.itemMeta(e,t);if(!n)return null;const a=b.itemOrderedChildrenIds(e,n.parentId),u=b.itemIndex(e,t);if(u===0)return n.parentId;let d=u-1;for(;!b.canItemBeFocused(e,a[d])&&d>=0;)d-=1;if(d===-1)return n.parentId==null?null:Ht(e,n.parentId);let h=a[d],p=Ge(e,b.itemOrderedChildrenIds(e,h));for(;k.isItemExpanded(e,h)&&p!=null;)h=p,p=Ge(e,b.itemOrderedChildrenIds(e,h));return h},be=(e,t)=>{if(k.isItemExpanded(e,t)){const a=b.itemOrderedChildrenIds(e,t).find(u=>b.canItemBeFocused(e,u));if(a!=null)return a}let n=b.itemMeta(e,t);for(;n!=null;){const a=b.itemOrderedChildrenIds(e,n.parentId),u=b.itemIndex(e,n.id);if(u<a.length-1){let d=u+1;for(;!b.canItemBeFocused(e,a[d])&&d<a.length-1;)d+=1;if(b.canItemBeFocused(e,a[d]))return a[d]}n=b.itemMeta(e,n.parentId)}return null},$t=e=>{let t=null;for(;t==null||k.isItemExpanded(e,t);){const n=b.itemOrderedChildrenIds(e,t),a=Ge(e,n);if(a==null)return t;t=a}return t},Ce=e=>b.itemOrderedChildrenIds(e,null).find(t=>b.canItemBeFocused(e,t)),Gt=(e,t,n)=>{if(t===n)return[t,n];const a=b.itemMeta(e,t),u=b.itemMeta(e,n);if(!a||!u)return[t,n];if(a.parentId===u.id||u.parentId===a.id)return u.parentId===a.id?[a.id,u.id]:[u.id,a.id];const d=[a.id],h=[u.id];let p=a.parentId,c=u.parentId,o=h.indexOf(p)!==-1,m=d.indexOf(c)!==-1,r=!0,s=!0;for(;!m&&!o;)r&&(d.push(p),o=h.indexOf(p)!==-1,r=p!==null,!o&&r&&(p=b.itemParentId(e,p))),s&&!o&&(h.push(c),m=d.indexOf(c)!==-1,s=c!==null,!m&&s&&(c=b.itemParentId(e,c)));const i=o?p:c,f=b.itemOrderedChildrenIds(e,i),g=d[d.indexOf(i)-1],I=h[h.indexOf(i)-1];return f.indexOf(g)<f.indexOf(I)?[t,n]:[n,t]},xn=(e,t,n)=>{const a=c=>{if(k.isItemExpandable(e,c)&&k.isItemExpanded(e,c))return b.itemOrderedChildrenIds(e,c)[0];let o=b.itemMeta(e,c);for(;o!=null;){const m=b.itemOrderedChildrenIds(e,o.parentId),r=b.itemIndex(e,o.id);if(r<m.length-1)return m[r+1];o=o.parentId?b.itemMeta(e,o.parentId):null}throw new Error("Invalid range")},[u,d]=Gt(e,t,n),h=[u];let p=u;for(;p!==d;)p=a(p),b.isItemDisabled(e,p)||h.push(p);return h},Vn=e=>{let t=Ce(e);const n=[];for(;t!=null;)n.push(t),t=be(e,t);return n},Ee=(e,t)=>t!==e.closest('*[role="treeitem"]'),Wt=Me(e=>e.selection.selectedItems,e=>Array.isArray(e)?e:e!=null?[e]:[]),_t=Me(Wt,e=>{const t=new Map;return e.forEach(n=>{t.set(n,!0)}),t}),R={selectedItemsRaw:C(e=>e.selection.selectedItems),selectedItems:Wt,selectedItemsMap:_t,enabled:C(e=>e.selection.isEnabled),isMultiSelectEnabled:C(e=>e.selection.isMultiSelectEnabled),isCheckboxSelectionEnabled:C(e=>e.selection.isCheckboxSelectionEnabled),propagationRules:C(e=>e.selection.selectionPropagation),isItemSelected:C(_t,(e,t)=>e.has(t)),canItemBeSelected:C(b.isItemDisabled,e=>e.selection.isEnabled,(e,t,n)=>t&&!e)},Te=e=>{const t={};return e.forEach(n=>{t[n]=!0}),t},Kt=({store:e,oldModel:t,newModel:n})=>{const a=new Map;return n.forEach(u=>{a.set(u,!0)}),{added:n.filter(u=>!R.isItemSelected(e.state,u)),removed:t.filter(u=>!a.has(u))}},vn=({store:e,selectionPropagation:t,newModel:n,oldModel:a,additionalItemsToPropagate:u})=>{if(!t.descendants&&!t.parents)return n;let d=!1;const h=Te(n),p=Kt({store:e,newModel:n,oldModel:a});return u?.forEach(c=>{h[c]?p.added.includes(c)||p.added.push(c):p.removed.includes(c)||p.removed.push(c)}),p.added.forEach(c=>{if(t.descendants){const o=m=>{m!==c&&(d=!0,h[m]=!0),b.itemOrderedChildrenIds(e.state,m).forEach(o)};o(c)}if(t.parents){const o=r=>h[r]?b.itemOrderedChildrenIds(e.state,r).every(o):!1,m=r=>{const s=b.itemParentId(e.state,r);if(s==null)return;b.itemOrderedChildrenIds(e.state,s).every(o)&&(d=!0,h[s]=!0,m(s))};m(c)}}),p.removed.forEach(c=>{if(t.parents){let o=b.itemParentId(e.state,c);for(;o!=null;)h[o]&&(d=!0,delete h[o]),o=b.itemParentId(e.state,o)}if(t.descendants){const o=m=>{m!==c&&(d=!0,delete h[m]),b.itemOrderedChildrenIds(e.state,m).forEach(o)};o(c)}}),d?Object.keys(h):n},Sn=C((e,t)=>{if(R.isItemSelected(e,t))return"checked";let n=!1,a=!1;const u=h=>{h!==t&&(R.isItemSelected(e,h)?n=!0:a=!0),b.itemOrderedChildrenIds(e,h).forEach(u)};return u(t),n&&a?"indeterminate":R.propagationRules(e).parents&&n&&!a?"checked":"empty"}),Cn=({props:e})=>{const{itemId:t}=e,{store:n}=G(),a=q(n,R.isCheckboxSelectionEnabled),u=q(n,R.canItemBeSelected,t),d=q(n,Sn,t);return{propsEnhancers:{checkbox:({externalEventHandlers:h,interactions:p})=>({tabIndex:-1,onChange:o=>{h.onChange?.(o),!o.defaultMuiPrevented&&R.canItemBeSelected(n.state,t)&&p.handleCheckboxSelection(o)},visible:a,disabled:!u,checked:d==="checked",indeterminate:d==="indeterminate"})}}},te=({store:e,params:t})=>{Ut({controlled:t.selectedItems,defaultValue:t.defaultSelectedItems});const n=T.useRef(null),a=T.useRef({}),u=(s,i,f)=>{const g=R.selectedItemsRaw(e.state);let I;const y=R.isMultiSelectEnabled(e.state);if(y&&(t.selectionPropagation.descendants||t.selectionPropagation.parents)?I=vn({store:e,selectionPropagation:t.selectionPropagation,newModel:i,oldModel:g,additionalItemsToPropagate:f}):I=i,t.onItemSelectionToggle)if(y){const x=Kt({store:e,newModel:I,oldModel:g});t.onItemSelectionToggle&&(x.added.forEach(V=>{t.onItemSelectionToggle(s,V,!0)}),x.removed.forEach(V=>{t.onItemSelectionToggle(s,V,!1)}))}else t.onItemSelectionToggle&&I!==g&&(g!=null&&t.onItemSelectionToggle(s,g,!1),I!=null&&t.onItemSelectionToggle(s,I,!0));t.selectedItems===void 0&&e.set("selection",{...e.state.selection,selectedItems:I}),t.onSelectedItemsChange?.(s,I)},d=({itemId:s,event:i=null,keepExistingSelection:f=!1,shouldBeSelected:g})=>{if(!R.enabled(e.state))return;let I;const y=R.isMultiSelectEnabled(e.state);if(f){const x=R.selectedItems(e.state),V=R.isItemSelected(e.state,s);V&&(g===!1||g==null)?I=x.filter(_=>_!==s):!V&&(g===!0||g==null)?I=[s].concat(x):I=x}else g===!1||g==null&&R.isItemSelected(e.state,s)?I=y?[]:null:I=y?[s]:s;u(i,I,[s]),n.current=s,a.current={}},h=(s,[i,f])=>{if(!R.isMultiSelectEnabled(e.state))return;let I=R.selectedItems(e.state).slice();Object.keys(a.current).length>0&&(I=I.filter(_=>!a.current[_]));const y=Te(I),x=xn(e.state,i,f),V=x.filter(_=>!y[_]);I=I.concat(V),u(s,I),a.current=Te(x)},p=(s,i)=>{if(n.current!=null){const[f,g]=Gt(e.state,i,n.current);h(s,[f,g])}},c=(s,i)=>{h(s,[Ce(e.state),i])},o=(s,i)=>{h(s,[i,$t(e.state)])},m=s=>{if(!R.isMultiSelectEnabled(e.state))return;const f=Vn(e.state);u(s,f),a.current=Te(f)},r=(s,i,f)=>{if(!R.isMultiSelectEnabled(e.state))return;let I=R.selectedItems(e.state).slice();Object.keys(a.current).length===0?(I.push(f),a.current={[i]:!0,[f]:!0}):(a.current[i]||(a.current={}),a.current[f]?(I=I.filter(y=>y!==i),delete a.current[i]):(I.push(f),a.current[f]=!0)),u(s,I)};return J(()=>{e.set("selection",{selectedItems:t.selectedItems===void 0?e.state.selection.selectedItems:t.selectedItems,isEnabled:!t.disableSelection,isMultiSelectEnabled:t.multiSelect,isCheckboxSelectionEnabled:t.checkboxSelection,selectionPropagation:{descendants:t.selectionPropagation.descendants,parents:t.selectionPropagation.parents}})},[e,t.selectedItems,t.multiSelect,t.checkboxSelection,t.disableSelection,t.selectionPropagation.descendants,t.selectionPropagation.parents]),{getRootProps:()=>({"aria-multiselectable":t.multiSelect}),publicAPI:{setItemSelection:d},instance:{setItemSelection:d,selectAllNavigableItems:m,expandSelectionRange:p,selectRangeFromStartToItem:c,selectRangeFromItemToEnd:o,selectItemFromArrowNavigation:r}}};te.itemPlugin=Cn;const En=[],_n={};te.applyDefaultValuesToParams=({params:e})=>({...e,disableSelection:e.disableSelection??!1,multiSelect:e.multiSelect??!1,checkboxSelection:e.checkboxSelection??!1,defaultSelectedItems:e.defaultSelectedItems??(e.multiSelect?En:null),selectionPropagation:e.selectionPropagation??_n});te.getInitialState=e=>({selection:{selectedItems:e.selectedItems===void 0?e.defaultSelectedItems:e.selectedItems,isEnabled:!e.disableSelection,isMultiSelectEnabled:e.multiSelect,isCheckboxSelectionEnabled:e.checkboxSelection,selectionPropagation:e.selectionPropagation}});te.params={disableSelection:!0,multiSelect:!0,checkboxSelection:!0,defaultSelectedItems:!0,selectedItems:!0,onSelectedItemsChange:!0,onItemSelectionToggle:!0,selectionPropagation:!0};const Rt=1e3;class Rn{timeouts=new Map;cleanupTimeout=Rt;constructor(t=Rt){this.cleanupTimeout=t}register(t,n,a){this.timeouts||(this.timeouts=new Map);const u=setTimeout(()=>{typeof n=="function"&&n(),this.timeouts.delete(a.cleanupToken)},this.cleanupTimeout);this.timeouts.set(a.cleanupToken,u)}unregister(t){const n=this.timeouts.get(t.cleanupToken);n&&(this.timeouts.delete(t.cleanupToken),clearTimeout(n))}reset(){this.timeouts&&(this.timeouts.forEach((t,n)=>{this.unregister({cleanupToken:n})}),this.timeouts=void 0)}}class Pn{registry=new FinalizationRegistry(t=>{typeof t=="function"&&t()});register(t,n,a){this.registry.register(t,n,a)}unregister(t){this.registry.unregister(t)}reset(){}}class qn{}function kn(e){let t=0;return function(a,u,d){e.registry===null&&(e.registry=typeof FinalizationRegistry<"u"?new Pn:new Rn);const[h]=T.useState(new qn),p=T.useRef(null),c=T.useRef(void 0);c.current=d;const o=T.useRef(null);if(!p.current&&c.current){const m=(r,s)=>{s.defaultMuiPrevented||c.current?.(r,s)};p.current=a.$$subscribeEvent(u,m),t+=1,o.current={cleanupToken:t},e.registry.register(h,()=>{p.current?.(),p.current=null,o.current=null},o.current)}else!c.current&&p.current&&(p.current(),p.current=null,o.current&&(e.registry.unregister(o.current),o.current=null));T.useEffect(()=>{if(!p.current&&c.current){const m=(r,s)=>{s.defaultMuiPrevented||c.current?.(r,s)};p.current=a.$$subscribeEvent(u,m)}return o.current&&e.registry&&(e.registry.unregister(o.current),o.current=null),()=>{p.current?.(),p.current=null}},[a,u])}}const Mn={registry:null},Xt=kn(Mn),Pt=Me(R.selectedItems,k.expandedItemsMap,b.itemMetaLookup,b.disabledItemFocusable,e=>b.itemOrderedChildrenIds(e,null),(e,t,n,a,u)=>{const d=e.find(p=>{if(!a&&Se(n,p))return!1;const c=n[p];return c&&(c.parentId==null||t.has(c.parentId))});if(d!=null)return d;const h=u.find(p=>a||!Se(n,p));return h??null}),X={defaultFocusableItemId:Pt,isItemTheDefaultFocusableItem:C(Pt,(e,t)=>e===t),focusedItemId:C(e=>e.focus.focusedItemId),isItemFocused:C((e,t)=>e.focus.focusedItemId===t)},De=({instance:e,params:t,store:n})=>{const a=N(m=>{X.focusedItemId(n.state)!==m&&n.set("focus",{...n.state.focus,focusedItemId:m})}),u=m=>{const r=b.itemMeta(n.state,m);return r&&(r.parentId==null||k.isItemExpanded(n.state,r.parentId))},d=(m,r)=>{const s=e.getItemDOMElement(r);s&&s.focus(),a(r),t.onItemFocus&&t.onItemFocus(m,r)},h=N((m,r)=>{u(r)&&d(m,r)}),p=N(()=>{const m=X.focusedItemId(n.state);if(m==null)return;if(b.itemMeta(n.state,m)){const s=e.getItemDOMElement(m);s&&s.blur()}a(null)});Xt(e,"removeItem",({id:m})=>{const r=X.focusedItemId(n.state),s=X.defaultFocusableItemId(n.state);r===m&&s!=null&&d(null,s)});const c=m=>r=>{if(m.onFocus?.(r),r.defaultMuiPrevented)return;const s=X.defaultFocusableItemId(n.state);r.target===r.currentTarget&&s!=null&&d(r,s)},o=m=>r=>{m.onBlur?.(r),!r.defaultMuiPrevented&&a(null)};return{getRootProps:m=>({onFocus:c(m),onBlur:o(m)}),publicAPI:{focusItem:h},instance:{focusItem:h,removeFocusedItem:p}}};De.getInitialState=()=>({focus:{focusedItemId:null}});De.params={onItemFocus:!0};const we=(e,t)=>e.getAvailablePlugins().has(t),z={isItemEditable:C(e=>e.label?.isItemEditable,b.itemModel,(e,t,n)=>!t||e==null?!1:typeof e=="boolean"?e:e(t)),isItemBeingEdited:C((e,t)=>t==null?!1:e.label?.editedItemId===t),isAnyItemBeingEdited:C(e=>!!e.label?.editedItemId)},Ln=({props:e})=>{const{store:t}=G(),{label:n,itemId:a}=e,[u,d]=T.useState(n),h=q(t,z.isItemEditable,a),p=q(t,z.isItemBeingEdited,a);return T.useEffect(()=>{p||d(n)},[p,n]),{propsEnhancers:{label:()=>({editable:h}),labelInput:({externalEventHandlers:c,interactions:o})=>h?{value:u??"","data-element":"labelInput",onChange:i=>{c.onChange?.(i),d(i.target.value)},onKeyDown:i=>{if(c.onKeyDown?.(i),i.defaultMuiPrevented)return;const f=i.target;i.key==="Enter"&&f.value?o.handleSaveItemLabel(i,f.value):i.key==="Escape"&&o.handleCancelItemLabelEditing(i)},onBlur:i=>{c.onBlur?.(i),!i.defaultMuiPrevented&&i.target.value&&o.handleSaveItemLabel(i,i.target.value)},autoFocus:!0,type:"text"}:{}}}},W=({store:e,params:t})=>{const n=u=>{u!==null&&!z.isItemEditable(e.state,u)||e.set("label",{...e.state.label,editedItemId:u})},a=(u,d)=>{if(!d)throw new Error(["MUI X: The Tree View component requires all items to have a `label` property.","The label of an item cannot be empty.",u].join(`
`));const h=e.state.items.itemMetaLookup[u];h.label!==d&&(e.set("items",{...e.state.items,itemMetaLookup:{...e.state.items.itemMetaLookup,[u]:{...h,label:d}}}),t.onItemLabelChange&&t.onItemLabelChange(u,d))};return J(()=>{e.set("label",{...e.state.items,isItemEditable:t.isItemEditable})},[e,t.isItemEditable]),{instance:{setEditedItem:n,updateItemLabel:a},publicAPI:{setEditedItem:n,updateItemLabel:a}}};W.itemPlugin=Ln;W.applyDefaultValuesToParams=({params:e})=>({...e,isItemEditable:e.isItemEditable??!1});W.getInitialState=e=>({label:{isItemEditable:e.isItemEditable,editedItemId:null}});W.params={onItemLabelChange:!0,isItemEditable:!0};function Dn(e){return!!e&&e.length===1&&!!e.match(/\S/)}const ft=({instance:e,store:t,params:n})=>{const a=Zt(),u=T.useRef({}),d=N(r=>{u.current=r(u.current)}),h=q(t,b.itemMetaLookup);T.useEffect(()=>{if(e.areItemUpdatesPrevented())return;const r={},s=i=>{r[i.id]=i.label.substring(0,1).toLowerCase()};Object.values(h).forEach(s),u.current=r},[h,n.getItemId,e]);const p=(r,s)=>{const i=s.toLowerCase(),f=x=>{const V=be(t.state,x);return V===null?Ce(t.state):V};let g=null,I=f(r);const y={};for(;g==null&&!y[I];)u.current[I]===i?g=I:(y[I]=!0,I=f(I));return g},c=r=>R.enabled(t.state)&&!b.isItemDisabled(t.state,r),o=r=>!b.isItemDisabled(t.state,r)&&k.isItemExpandable(t.state,r);return{instance:{updateFirstCharMap:d,handleItemKeyDown:async(r,s)=>{if(r.defaultMuiPrevented||r.altKey||Ee(r.target,r.currentTarget))return;const i=r.ctrlKey||r.metaKey,f=r.key,g=R.isMultiSelectEnabled(t.state);switch(!0){case(f===" "&&c(s)):{r.preventDefault(),g&&r.shiftKey?e.expandSelectionRange(r,s):e.setItemSelection({event:r,itemId:s,keepExistingSelection:g,shouldBeSelected:void 0});break}case f==="Enter":{we(e,W)&&z.isItemEditable(t.state,s)&&!z.isItemBeingEdited(t.state,s)?e.setEditedItem(s):o(s)?(e.setItemExpansion({event:r,itemId:s}),r.preventDefault()):c(s)&&(g?(r.preventDefault(),e.setItemSelection({event:r,itemId:s,keepExistingSelection:!0})):R.isItemSelected(t.state,s)||(e.setItemSelection({event:r,itemId:s}),r.preventDefault()));break}case f==="ArrowDown":{const I=be(t.state,s);I&&(r.preventDefault(),e.focusItem(r,I),g&&r.shiftKey&&c(I)&&e.selectItemFromArrowNavigation(r,s,I));break}case f==="ArrowUp":{const I=Ht(t.state,s);I&&(r.preventDefault(),e.focusItem(r,I),g&&r.shiftKey&&c(I)&&e.selectItemFromArrowNavigation(r,s,I));break}case(f==="ArrowRight"&&!a||f==="ArrowLeft"&&a):{if(i)return;if(k.isItemExpanded(t.state,s)){const I=be(t.state,s);I&&(e.focusItem(r,I),r.preventDefault())}else o(s)&&(e.setItemExpansion({event:r,itemId:s}),r.preventDefault());break}case(f==="ArrowLeft"&&!a||f==="ArrowRight"&&a):{if(i)return;if(o(s)&&k.isItemExpanded(t.state,s))e.setItemExpansion({event:r,itemId:s}),r.preventDefault();else{const I=b.itemParentId(t.state,s);I&&(e.focusItem(r,I),r.preventDefault())}break}case f==="Home":{c(s)&&g&&i&&r.shiftKey?e.selectRangeFromStartToItem(r,s):e.focusItem(r,Ce(t.state)),r.preventDefault();break}case f==="End":{c(s)&&g&&i&&r.shiftKey?e.selectRangeFromItemToEnd(r,s):e.focusItem(r,$t(t.state)),r.preventDefault();break}case f==="*":{e.expandAllSiblings(r,s),r.preventDefault();break}case(String.fromCharCode(r.keyCode)==="A"&&i&&g&&R.enabled(t.state)):{e.selectAllNavigableItems(r),r.preventDefault();break}case(!i&&!r.shiftKey&&Dn(f)):{const I=p(s,f);I!=null&&(e.focusItem(r,I),r.preventDefault());break}}}}}};ft.params={};function Nn(e){return e.replace(/["\\]/g,"\\$&")}const _e=T.createContext(null);function ie(e){const{children:t,itemId:n=null,idAttribute:a}=e,{instance:u,store:d,rootRef:h}=G(),p=T.useRef(new Map);T.useEffect(()=>{if(!h.current)return;const o=b.itemOrderedChildrenIds(d.state,n??null)??[],m=Nn(a??h.current.id);if(n!=null){const f=h.current.querySelector(`*[id="${m}"][role="treeitem"]`);if(f&&f.getAttribute("aria-expanded")==="false")return}const r=h.current.querySelectorAll(`${n==null?"":`*[id="${m}"] `}[role="treeitem"]:not(*[id="${m}"] [role="treeitem"] [role="treeitem"])`),s=Array.from(r).map(f=>p.current.get(f.id));(s.length!==o.length||s.some((f,g)=>f!==o[g]))&&u.setJSXItemsOrderedChildrenIds(n??null,s)});const c=T.useMemo(()=>({registerChild:(o,m)=>p.current.set(o,m),unregisterChild:o=>p.current.delete(o),parentId:n}),[n]);return S.jsx(_e.Provider,{value:c,children:t})}ie.propTypes={children:l.node,id:l.string};try{ie.displayName="TreeViewChildrenItemProvider",ie.__docgenInfo={description:"",displayName:"TreeViewChildrenItemProvider",props:{itemId:{defaultValue:null,description:"",name:"itemId",required:!0,type:{name:"string | null"}},idAttribute:{defaultValue:null,description:"",name:"idAttribute",required:!0,type:{name:"string | null"}}}}}catch{}try{_e.displayName="TreeViewChildrenItemContext",_e.__docgenInfo={description:"",displayName:"TreeViewChildrenItemContext",props:{}}}catch{}const Q={dataSource:C(e=>e.lazyLoading?.dataSource),isItemLoading:C((e,t)=>e.lazyLoading?.dataSource.loading[t]??!1),itemHasError:C((e,t)=>!!e.lazyLoading?.dataSource.errors[t])},oe=e=>Array.isArray(e)?e.length>0&&e.some(oe):!!e,We=({itemId:e,children:t})=>{const{instance:n,store:a,publicAPI:u}=G(),d=q(a,k.isItemExpandable,e),h=q(a,Q.isItemLoading,e),p=q(a,Q.itemHasError,e),c=oe(t)||d,o=q(a,k.isItemExpanded,e),m=q(a,X.isItemFocused,e),r=q(a,R.isItemSelected,e),s=q(a,b.isItemDisabled,e),i=q(a,z.isItemBeingEdited,e),f=q(a,z.isItemEditable,e),g={expandable:c,expanded:o,focused:m,selected:r,disabled:s,editing:i,editable:f,loading:h,error:p},I=E=>{if(g.disabled)return;g.focused||n.focusItem(E,e);const L=R.isMultiSelectEnabled(a.state)&&(E.shiftKey||E.ctrlKey||E.metaKey);g.expandable&&!(L&&k.isItemExpanded(a.state,e))&&n.setItemExpansion({event:E,itemId:e})},y=E=>{if(g.disabled)return;!g.focused&&!g.editing&&n.focusItem(E,e),R.isMultiSelectEnabled(a.state)&&(E.shiftKey||E.ctrlKey||E.metaKey)?E.shiftKey?n.expandSelectionRange(E,e):n.setItemSelection({event:E,itemId:e,keepExistingSelection:!0}):n.setItemSelection({event:E,itemId:e,shouldBeSelected:!0})},x=E=>{const L=E.nativeEvent.shiftKey,M=R.isMultiSelectEnabled(a.state);M&&L?n.expandSelectionRange(E,e):n.setItemSelection({event:E,itemId:e,keepExistingSelection:M,shouldBeSelected:E.target.checked})},V=()=>{we(n,W)&&(i?n.setEditedItem(null):n.setEditedItem(e))};return{interactions:{handleExpansion:I,handleSelection:y,handleCheckboxSelection:x,toggleItemEditing:V,handleSaveItemLabel:(E,L)=>{we(n,W)&&z.isItemBeingEdited(a.state,e)&&(n.updateItemLabel(e,L),V(),n.focusItem(E,e))},handleCancelItemLabelEditing:E=>{we(n,W)&&z.isItemBeingEdited(a.state,e)&&(V(),n.focusItem(E,e))}},status:g,publicAPI:u}};try{oe.displayName="itemHasChildren",oe.__docgenInfo={description:"",displayName:"itemHasChildren",props:{}}}catch{}try{We.displayName="useTreeItemUtils",We.__docgenInfo={description:"",displayName:"useTreeItemUtils",props:{itemId:{defaultValue:null,description:"",name:"itemId",required:!0,type:{name:"string"}}}}}catch{}const H=({instance:e,store:t})=>{e.preventItemUpdates();const n=N(d=>{if(t.state.items.itemMetaLookup[d.id]!=null)throw new Error(["MUI X: The Tree View component requires all items to have a unique `id` property.","Alternatively, you can use the `getItemId` prop to specify a custom id for each item.",`Two items were provided with the same id in the \`items\` prop: "${d.id}"`].join(`
`));return t.set("items",{...t.state.items,itemMetaLookup:{...t.state.items.itemMetaLookup,[d.id]:d},itemModelLookup:{...t.state.items.itemModelLookup,[d.id]:{id:d.id,label:d.label??""}}}),()=>{const h={...t.state.items.itemMetaLookup},p={...t.state.items.itemModelLookup};delete h[d.id],delete p[d.id],t.set("items",{...t.state.items,itemMetaLookup:h,itemModelLookup:p}),ae(e,"removeItem",{id:d.id})}}),a=(d,h)=>{const p=d??U;t.set("items",{...t.state.items,itemOrderedChildrenIdsLookup:{...t.state.items.itemOrderedChildrenIdsLookup,[p]:h},itemChildrenIndexesLookup:{...t.state.items.itemChildrenIndexesLookup,[p]:ve(h)}})},u=N((d,h)=>(e.updateFirstCharMap(p=>(p[d]=h,p)),()=>{e.updateFirstCharMap(p=>{const c={...p};return delete c[d],c})}));return{instance:{insertJSXItem:n,setJSXItemsOrderedChildrenIds:a,mapFirstCharFromJSX:u}}},On=({props:e,rootRef:t,contentRef:n})=>{const{instance:a,store:u}=G(),{children:d,disabled:h=!1,label:p,itemId:c,id:o}=e,m=T.useContext(_e);if(m==null)throw new Error(["MUI X: Could not find the Tree View Children Item context.","It looks like you rendered your component outside of a SimpleTreeView parent component.","This can also happen if you are bundling multiple versions of the Tree View."].join(`
`));const{registerChild:r,unregisterChild:s,parentId:i}=m,f=oe(d),g=T.useRef(null),I=xe(g,n),y=q(u,le.treeId);return J(()=>{const x=Le({itemId:c,treeId:y,id:o});return r(x,c),()=>{s(x),s(x)}},[u,a,r,s,c,o,y]),J(()=>a.insertJSXItem({id:c,idAttribute:o,parentId:i,expandable:f,disabled:h}),[a,i,c,f,h,o]),T.useEffect(()=>{if(p)return a.mapFirstCharFromJSX(c,(g.current?.textContent??"").substring(0,1).toLowerCase())},[a,c,p]),{contentRef:I,rootRef:t}};H.itemPlugin=On;H.wrapItem=({children:e,itemId:t,idAttribute:n})=>{const a=T.useContext(re);return S.jsx(ie,{itemId:t,idAttribute:n,children:S.jsx(re.Provider,{value:a+1,children:e})})};H.wrapRoot=({children:e})=>S.jsx(ie,{itemId:null,idAttribute:null,children:S.jsx(re.Provider,{value:0,children:e})});H.params={};try{H.displayName="useTreeViewJSXItems",H.__docgenInfo={description:"",displayName:"useTreeViewJSXItems",props:{instance:{defaultValue:null,description:"An imperative API available for internal use. Used to access methods from other plugins.",name:"instance",required:!0,type:{name:"TreeViewUsedInstance<UseTreeViewJSXItemsSignature>"}},params:{defaultValue:null,description:"The Tree View parameters after being processed with the default values.",name:"params",required:!0,type:{name:"TreeViewUsedParamsWithDefaults<UseTreeViewJSXItemsSignature>"}},store:{defaultValue:null,description:"The store that can be used to access the state of other plugins.",name:"store",required:!0,type:{name:"TreeViewUsedStore<UseTreeViewJSXItemsSignature>"}},rootRef:{defaultValue:null,description:"Reference to the root element.",name:"rootRef",required:!0,type:{name:"RefObject<HTMLUListElement | null>"}},plugins:{defaultValue:null,description:"All the plugins that are used in the tree-view.",name:"plugins",required:!0,type:{name:"TreeViewPlugin<TreeViewAnyPluginSignature>[]"}}}}}catch{}try{H.wrapItem.displayName="useTreeViewJSXItems.wrapItem",H.wrapItem.__docgenInfo={description:"",displayName:"useTreeViewJSXItems.wrapItem",props:{itemId:{defaultValue:null,description:"",name:"itemId",required:!0,type:{name:"string"}},instance:{defaultValue:null,description:"",name:"instance",required:!0,type:{name:"TreeViewInstance<[UseTreeViewJSXItemsSignature, UseTreeViewItemsSignature, UseTreeViewKeyboardNavigationSignature]>"}},idAttribute:{defaultValue:null,description:"",name:"idAttribute",required:!0,type:{name:"string"}}}}}catch{}try{H.wrapRoot.displayName="useTreeViewJSXItems.wrapRoot",H.wrapRoot.__docgenInfo={description:"",displayName:"useTreeViewJSXItems.wrapRoot",props:{}}}catch{}try{applyDefaultValuesToParams.displayName="applyDefaultValuesToParams",applyDefaultValuesToParams.__docgenInfo={description:"A function that receives the parameters and returns them after being processed with the default values.",displayName:"applyDefaultValuesToParams",props:{}}}catch{}try{getInitialState.displayName="getInitialState",getInitialState.__docgenInfo={description:`The initial state is computed after the default values are applied.
It sets up the state for the first render.
Other state modifications have to be done in effects and so could not be applied on the initial render.`,displayName:"getInitialState",props:{}}}catch{}const An=[$,de,te,De,ft,H],Fn=Dt(),Bn=e=>{const{classes:t}=e;return T.useMemo(()=>ct({root:["root"],item:["item"],itemContent:["itemContent"],itemGroupTransition:["itemGroupTransition"],itemIconContainer:["itemIconContainer"],itemLabel:["itemLabel"],itemCheckbox:["itemCheckbox"]},cn,t),[t])},Ke=F("ul",{name:"MuiSimpleTreeView",slot:"Root"})({padding:0,margin:0,listStyle:"none",outline:0,position:"relative"}),jn=[],Un=T.forwardRef(function(t,n){const a=Fn({props:t,name:"MuiSimpleTreeView"}),{slots:u,slotProps:d,...h}=a,{getRootProps:p,contextValue:c}=At({plugins:An,rootRef:n,props:{...h,items:jn}}),o=Bn(a),m=u?.root??Ke,r=O({elementType:m,externalSlotProps:d?.root,className:o.root,getSlotProps:p,ownerState:a});return S.jsx(Ve,{contextValue:c,classes:o,slots:u,slotProps:d,children:S.jsx(m,{...r})})});Un.propTypes={apiRef:l.shape({current:l.shape({focusItem:l.func,getItem:l.func,getItemDOMElement:l.func,getItemOrderedChildrenIds:l.func,getItemTree:l.func,getParentId:l.func,isItemExpanded:l.func,setIsItemDisabled:l.func,setItemExpansion:l.func,setItemSelection:l.func})}),checkboxSelection:l.bool,children:l.node,classes:l.object,className:l.string,defaultExpandedItems:l.arrayOf(l.string),defaultSelectedItems:l.any,disabledItemsFocusable:l.bool,disableSelection:l.bool,expandedItems:l.arrayOf(l.string),expansionTrigger:l.oneOf(["content","iconContainer"]),id:l.string,itemChildrenIndentation:l.oneOfType([l.number,l.string]),multiSelect:l.bool,onExpandedItemsChange:l.func,onItemClick:l.func,onItemExpansionToggle:l.func,onItemFocus:l.func,onItemSelectionToggle:l.func,onSelectedItemsChange:l.func,selectedItems:l.any,selectionPropagation:l.shape({descendants:l.bool,parents:l.bool}),slotProps:l.object,slots:l.object,sx:l.oneOfType([l.arrayOf(l.oneOfType([l.func,l.object,l.bool])),l.func,l.object])};try{Ke.displayName="SimpleTreeViewRoot",Ke.__docgenInfo={description:"",displayName:"SimpleTreeViewRoot",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},sx:{defaultValue:null,description:"",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},ownerState:{defaultValue:null,description:"",name:"ownerState",required:!0,type:{name:"SimpleTreeViewProps<any>"}}}}}catch{}const zn=e=>{const{runItemPlugins:t,instance:n,publicAPI:a,store:u}=G(),d=T.useContext(re),h=q(u,(...v)=>typeof d=="function"?d(...v):d,e.itemId),{id:p,itemId:c,label:o,children:m,rootRef:r}=e,{rootRef:s,contentRef:i,propsEnhancers:f}=t(e),{interactions:g,status:I}=We({itemId:c,children:m}),y=T.useRef(null),x=T.useRef(null),V=xe(r,s,y),_=xe(i,x),P=T.useRef(null),A=q(u,le.treeId),E=q(u,R.canItemBeSelected,c),L=q(u,R.isCheckboxSelectionEnabled),M=Le({itemId:c,treeId:A,id:p}),ce=q(u,X.isItemTheDefaultFocusableItem,c),K={rootRefObject:y,contentRefObject:x,interactions:g},pe=v=>w=>{v.onFocus?.(w),!w.defaultMuiPrevented&&!I.focused&&b.canItemBeFocused(u.state,c)&&w.currentTarget===w.target&&n.focusItem(w,c)},Ne=v=>w=>{if(v.onBlur?.(w),w.defaultMuiPrevented)return;const D=n.getItemDOMElement(c);I.editing||w.relatedTarget&&Ee(w.relatedTarget,D)&&(w.target&&w.target?.dataset?.element==="labelInput"&&Ee(w.target,D)||w.relatedTarget?.dataset?.element==="labelInput")||n.removeFocusedItem()},me=v=>w=>{v.onKeyDown?.(w),!(w.defaultMuiPrevented||w.target?.dataset?.element==="labelInput")&&n.handleItemKeyDown(w,c)},Oe=v=>w=>{v.onDoubleClick?.(w),!w.defaultMuiPrevented&&g.toggleItemEditing()},fe=v=>w=>{v.onClick?.(w),n.handleItemClick(w,c),!(w.defaultMuiPrevented||P.current?.contains(w.target))&&(k.triggerSlot(u.state)==="content"&&g.handleExpansion(w),L||g.handleSelection(w))},Ae=v=>w=>{v.onMouseDown?.(w),!w.defaultMuiPrevented&&(w.shiftKey||w.ctrlKey||w.metaKey||I.disabled)&&w.preventDefault()},he=v=>w=>{v.onClick?.(w),!w.defaultMuiPrevented&&k.triggerSlot(u.state)==="iconContainer"&&g.handleExpansion(w)};return{getContextProviderProps:()=>({itemId:c,id:p}),getRootProps:(v={})=>{const w={...B(e),...B(v)};let D;I.selected?D=!0:E?D=!1:D=void 0;const Y={...w,ref:V,role:"treeitem",tabIndex:ce?0:-1,id:M,"aria-expanded":I.expandable?I.expanded:void 0,"aria-selected":D,"aria-disabled":I.disabled||void 0,...v,style:{...v.style??{},"--TreeView-itemDepth":h},onFocus:pe(w),onBlur:Ne(w),onKeyDown:me(w)},Ie=f.root?.({...K,externalEventHandlers:w})??{};return{...Y,...Ie}},getContentProps:(v={})=>{const w=B(v),D={...w,...v,ref:_,onClick:fe(w),onMouseDown:Ae(w),status:I};["expanded","selected","focused","disabled","editing","editable"].forEach(Ie=>{I[Ie]&&(D[`data-${Ie}`]="")});const Y=f.content?.({...K,externalEventHandlers:w})??{};return{...D,...Y}},getGroupTransitionProps:(v={})=>({...B(v),unmountOnExit:!0,component:"ul",role:"group",in:I.expanded,children:m,...v}),getIconContainerProps:(v={})=>{const w=B(v);return{...w,...v,onClick:he(w)}},getCheckboxProps:(v={})=>{const w=B(v),D={...w,ref:P,"aria-hidden":!0,...v},Y=f.checkbox?.({...K,externalEventHandlers:w})??{};return{...D,...Y}},getLabelProps:(v={})=>{const w={...B(v)},D={...w,children:o,...v,onDoubleClick:Oe(w)};return{...f.label?.({...K,externalEventHandlers:w})??{},...D}},getLabelInputProps:(v={})=>{const w=B(v),D=f.labelInput?.({...K,externalEventHandlers:w})??{};return{...v,...D}},getDragAndDropOverlayProps:(v={})=>{const w=B(v),D=f.dragAndDropOverlay?.({...K,externalEventHandlers:w})??{};return{...v,...D}},getErrorContainerProps:(v={})=>({...B(v),...v}),getLoadingContainerProps:(v={})=>({size:"12px",thickness:6,...B(v),...v}),rootRef:V,status:I,publicAPI:a}};function Hn(e){return ut("MuiTreeItem",e)}dt("MuiTreeItem",["root","content","groupTransition","iconContainer","label","checkbox","labelInput","dragAndDropOverlay","errorIcon","loadingIcon","expanded","selected","focused","disabled","editable","editing"]);const Xe=Mt(S.jsx("path",{d:"M10 6 8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"})),Je=Mt(S.jsx("path",{d:"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z"}));try{Xe.displayName="TreeViewExpandIcon",Xe.__docgenInfo={description:"",displayName:"TreeViewExpandIcon",props:{component:{defaultValue:null,description:`The component used for the root node.
Either a string to use a HTML element or a component.`,name:"component",required:!0,type:{name:"ElementType<any, keyof IntrinsicElements>"}},children:{defaultValue:null,description:"Node passed into the SVG element.",name:"children",required:!1,type:{name:"any"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"(Partial<SvgIconClasses> & Partial<ClassNameMap<never>>)"}},color:{defaultValue:{value:"'inherit'"},description:`The color of the component.
It supports both default and custom theme colors, which can be added as shown in the
[palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
You can use the \`htmlColor\` prop to apply a color attribute to the SVG element.`,name:"color",required:!1,type:{name:"any"}},fontSize:{defaultValue:{value:"'medium'"},description:"The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.",name:"fontSize",required:!1,type:{name:"any"}},htmlColor:{defaultValue:null,description:"Applies a color attribute to the SVG element.",name:"htmlColor",required:!1,type:{name:"any"}},inheritViewBox:{defaultValue:{value:"false"},description:"If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`\nprop will be ignored.\nUseful when you want to reference a custom `component` and have `SvgIcon` pass that\n`component`'s viewBox to the root node.",name:"inheritViewBox",required:!1,type:{name:"any"}},shapeRendering:{defaultValue:null,description:`The shape-rendering attribute. The behavior of the different options is described on the
[MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Reference/Attribute/shape-rendering).
If you are having issues with blurry icons you should investigate this prop.`,name:"shapeRendering",required:!1,type:{name:"any"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"any"}},titleAccess:{defaultValue:null,description:`Provides a human-readable title for the element that contains it.
https://www.w3.org/TR/SVG-access/#Equivalent`,name:"titleAccess",required:!1,type:{name:"any"}},viewBox:{defaultValue:{value:"'0 0 24 24'"},description:`Allows you to redefine what the coordinates without units mean inside an SVG element.
For example, if the SVG element is 500 (width) by 200 (height),
and you pass viewBox="0 0 50 20",
this means that the coordinates inside the SVG will go from the top left corner (0,0)
to bottom right (50,20) and each unit will be worth 10px.`,name:"viewBox",required:!1,type:{name:"any"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"any"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"any"}}}}}catch{}try{Je.displayName="TreeViewCollapseIcon",Je.__docgenInfo={description:"",displayName:"TreeViewCollapseIcon",props:{component:{defaultValue:null,description:`The component used for the root node.
Either a string to use a HTML element or a component.`,name:"component",required:!0,type:{name:"ElementType<any, keyof IntrinsicElements>"}},children:{defaultValue:null,description:"Node passed into the SVG element.",name:"children",required:!1,type:{name:"any"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"(Partial<SvgIconClasses> & Partial<ClassNameMap<never>>)"}},color:{defaultValue:{value:"'inherit'"},description:`The color of the component.
It supports both default and custom theme colors, which can be added as shown in the
[palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
You can use the \`htmlColor\` prop to apply a color attribute to the SVG element.`,name:"color",required:!1,type:{name:"any"}},fontSize:{defaultValue:{value:"'medium'"},description:"The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.",name:"fontSize",required:!1,type:{name:"any"}},htmlColor:{defaultValue:null,description:"Applies a color attribute to the SVG element.",name:"htmlColor",required:!1,type:{name:"any"}},inheritViewBox:{defaultValue:{value:"false"},description:"If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`\nprop will be ignored.\nUseful when you want to reference a custom `component` and have `SvgIcon` pass that\n`component`'s viewBox to the root node.",name:"inheritViewBox",required:!1,type:{name:"any"}},shapeRendering:{defaultValue:null,description:`The shape-rendering attribute. The behavior of the different options is described on the
[MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Reference/Attribute/shape-rendering).
If you are having issues with blurry icons you should investigate this prop.`,name:"shapeRendering",required:!1,type:{name:"any"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"any"}},titleAccess:{defaultValue:null,description:`Provides a human-readable title for the element that contains it.
https://www.w3.org/TR/SVG-access/#Equivalent`,name:"titleAccess",required:!1,type:{name:"any"}},viewBox:{defaultValue:{value:"'0 0 24 24'"},description:`Allows you to redefine what the coordinates without units mean inside an SVG element.
For example, if the SVG element is 500 (width) by 200 (height),
and you pass viewBox="0 0 50 20",
this means that the coordinates inside the SVG will go from the top left corner (0,0)
to bottom right (50,20) and each unit will be worth 10px.`,name:"viewBox",required:!1,type:{name:"any"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"any"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"any"}}}}}catch{}function Re(e){const{slots:t,slotProps:n,status:a}=e,{slots:u,slotProps:d}=jt(),h={collapseIcon:t?.collapseIcon??u.collapseIcon??Je,expandIcon:t?.expandIcon??u.expandIcon??Xe,endIcon:t?.endIcon??u.endIcon,icon:t?.icon};let p;h?.icon?p="icon":a.expandable?a.expanded?p="collapseIcon":p="expandIcon":p="endIcon";const c=h[p],o=O({elementType:c,externalSlotProps:m=>({...xt(d[p],m),...xt(n?.[p],m)}),ownerState:{}});return c?S.jsx(c,{...o}):null}Re.propTypes={slotProps:l.object,slots:l.object,status:l.shape({disabled:l.bool.isRequired,editable:l.bool.isRequired,editing:l.bool.isRequired,error:l.bool.isRequired,expandable:l.bool.isRequired,expanded:l.bool.isRequired,focused:l.bool.isRequired,loading:l.bool.isRequired,selected:l.bool.isRequired}).isRequired};try{Re.displayName="TreeItemIcon",Re.__docgenInfo={description:"",displayName:"TreeItemIcon",props:{status:{defaultValue:null,description:"",name:"status",required:!0,type:{name:"UseTreeItemStatus"}},slots:{defaultValue:{value:"{}"},description:"Overridable component slots.",name:"slots",required:!1,type:{name:"TreeItemIconSlots"}},slotProps:{defaultValue:{value:"{}"},description:"The props used for each component slot.",name:"slotProps",required:!1,type:{name:"TreeItemIconSlotProps"}}}}}catch{}const $n=F("div",{name:"MuiTreeItemDragAndDropOverlay",slot:"Root",shouldForwardProp:e=>pt(e)&&e!=="action"})(({theme:e})=>({position:"absolute",left:0,display:"flex",top:0,bottom:0,right:0,pointerEvents:"none",variants:[{props:{action:"make-child"},style:{marginLeft:"calc(var(--TreeView-indentMultiplier) * var(--TreeView-itemDepth))",borderRadius:e.shape.borderRadius,backgroundColor:e.vars?`rgba(${e.vars.palette.primary.darkChannel} / ${e.vars.palette.action.focusOpacity})`:ne(e.palette.primary.dark,e.palette.action.focusOpacity)}},{props:{action:"reorder-above"},style:{marginLeft:"calc(var(--TreeView-indentMultiplier) * var(--TreeView-itemDepth))",borderTop:`1px solid ${(e.vars||e).palette.action.active}`}},{props:{action:"reorder-below"},style:{marginLeft:"calc(var(--TreeView-indentMultiplier) * var(--TreeView-itemDepth))",borderBottom:`1px solid ${(e.vars||e).palette.action.active}`}},{props:{action:"move-to-parent"},style:{marginLeft:"calc(var(--TreeView-indentMultiplier) * calc(var(--TreeView-itemDepth) - 1))",borderBottom:`1px solid ${(e.vars||e).palette.action.active}`}}]}));function Pe(e){return e.action==null?null:S.jsx($n,{...e})}Pe.propTypes={action:l.oneOf(["make-child","move-to-parent","reorder-above","reorder-below"]),style:l.object};try{Pe.displayName="TreeItemDragAndDropOverlay",Pe.__docgenInfo={description:"",displayName:"TreeItemDragAndDropOverlay",props:{action:{defaultValue:null,description:"",name:"action",required:!1,type:{name:"enum",value:[{value:'"make-child"'},{value:'"move-to-parent"'},{value:'"reorder-above"'},{value:'"reorder-below"'}]}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}}}}}catch{}function qe(e){const{children:t,itemId:n,id:a}=e,{wrapItem:u,instance:d,store:h}=G(),p=q(h,le.treeId),c=Le({itemId:n,treeId:p,id:a});return S.jsx(T.Fragment,{children:u({children:t,itemId:n,instance:d,idAttribute:c})})}qe.propTypes={children:l.node,id:l.string,itemId:l.string.isRequired};try{qe.displayName="TreeItemProvider",qe.__docgenInfo={description:"",displayName:"TreeItemProvider",props:{itemId:{defaultValue:null,description:"",name:"itemId",required:!0,type:{name:"string"}},id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string | undefined"}}}}}catch{}const Ye=F("input",{name:"MuiTreeItem",slot:"LabelInput"})(({theme:e})=>({...e.typography.body1,width:"100%",backgroundColor:(e.vars||e).palette.background.paper,borderRadius:e.shape.borderRadius,border:"none",padding:"0 2px",boxSizing:"border-box","&:focus":{outline:`1px solid ${(e.vars||e).palette.primary.main}`}}));try{Ye.displayName="TreeItemLabelInput",Ye.__docgenInfo={description:"",displayName:"TreeItemLabelInput",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},sx:{defaultValue:null,description:"",name:"sx",required:!1,type:{name:"SxProps<Theme>"}}}}}catch{}const Gn=Dt(),Qe=F("li",{name:"MuiTreeItem",slot:"Root"})({listStyle:"none",margin:0,padding:0,outline:0}),Ze=F("div",{name:"MuiTreeItem",slot:"Content",shouldForwardProp:e=>pt(e)&&e!=="status"})(({theme:e})=>({padding:e.spacing(.5,1),paddingLeft:`calc(${e.spacing(1)} + var(--TreeView-itemChildrenIndentation) * var(--TreeView-itemDepth))`,borderRadius:e.shape.borderRadius,width:"100%",boxSizing:"border-box",position:"relative",display:"flex",alignItems:"center",gap:e.spacing(1),cursor:"pointer",WebkitTapHighlightColor:"transparent","&:hover":{backgroundColor:(e.vars||e).palette.action.hover,"@media (hover: none)":{backgroundColor:"transparent"}},"&[data-disabled]":{opacity:(e.vars||e).palette.action.disabledOpacity,backgroundColor:"transparent"},"&[data-focused]":{backgroundColor:(e.vars||e).palette.action.focus},"&[data-selected]":{backgroundColor:e.vars?`rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})`:ne(e.palette.primary.main,e.palette.action.selectedOpacity),"&:hover":{backgroundColor:e.vars?`rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))`:ne(e.palette.primary.main,e.palette.action.selectedOpacity+e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:e.vars?`rgba(${e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.selectedOpacity})`:ne(e.palette.primary.main,e.palette.action.selectedOpacity)}}},"&[data-selected][data-focused]":{backgroundColor:e.vars?`rgba(${e.vars.palette.primary.mainChannel} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.focusOpacity}))`:ne(e.palette.primary.main,e.palette.action.selectedOpacity+e.palette.action.focusOpacity)}})),et=F("div",{name:"MuiTreeItem",slot:"Label",shouldForwardProp:e=>pt(e)&&e!=="editable"})(({theme:e})=>({width:"100%",boxSizing:"border-box",minWidth:0,position:"relative",overflow:"hidden",...e.typography.body1,variants:[{props:({editable:t})=>t,style:{paddingLeft:"2px"}}]})),tt=F("div",{name:"MuiTreeItem",slot:"IconContainer"})({width:16,display:"flex",flexShrink:0,justifyContent:"center",position:"relative","& svg":{fontSize:18}}),nt=F(on,{name:"MuiTreeItem",slot:"GroupTransition",overridesResolver:(e,t)=>t.groupTransition})({margin:0,padding:0}),at=F("div",{name:"MuiTreeItem",slot:"ErrorIcon"})({position:"absolute",right:-3,width:7,height:7,borderRadius:"50%",backgroundColor:"red"}),rt=F(sn,{name:"MuiTreeItem",slot:"LoadingIcon"})({color:"text.primary"}),it=F(T.forwardRef((e,t)=>{const{visible:n,...a}=e;return n?S.jsx(ln,{...a,ref:t}):null}),{name:"MuiTreeItem",slot:"Checkbox"})({padding:0}),Wn=e=>{const{classes:t}=jt(),n={...e,root:j(e?.root,t.root),content:j(e?.content,t.itemContent),iconContainer:j(e?.iconContainer,t.itemIconContainer),checkbox:j(e?.checkbox,t.itemCheckbox),label:j(e?.label,t.itemLabel),groupTransition:j(e?.groupTransition,t.itemGroupTransition),labelInput:j(e?.labelInput,t.itemLabelInput),dragAndDropOverlay:j(e?.dragAndDropOverlay,t.itemDragAndDropOverlay),errorIcon:j(e?.errorIcon,t.itemErrorIcon),loadingIcon:j(e?.loadingIcon,t.itemLoadingIcon)};return ct({root:["root"],content:["content"],iconContainer:["iconContainer"],checkbox:["checkbox"],label:["label"],groupTransition:["groupTransition"],labelInput:["labelInput"],dragAndDropOverlay:["dragAndDropOverlay"],errorIcon:["errorIcon"],loadingIcon:["loadingIcon"],expanded:["expanded"],editing:["editing"],editable:["editable"],selected:["selected"],focused:["focused"],disabled:["disabled"]},Hn,n)},ke=T.forwardRef(function(t,n){const a=Gn({props:t,name:"MuiTreeItem"}),{id:u,itemId:d,label:h,disabled:p,children:c,slots:o={},slotProps:m={},classes:r,...s}=a,{getContextProviderProps:i,getRootProps:f,getContentProps:g,getIconContainerProps:I,getCheckboxProps:y,getLabelProps:x,getGroupTransitionProps:V,getLabelInputProps:_,getDragAndDropOverlayProps:P,getErrorContainerProps:A,getLoadingContainerProps:E,status:L}=zn({id:u,itemId:d,children:c,label:h,disabled:p}),M=Wn(r),ce=o.root??Qe,K=O({elementType:ce,getSlotProps:f,externalForwardedProps:s,externalSlotProps:m.root,additionalProps:{ref:n},ownerState:{},className:M.root}),pe=o.content??Ze,Ne=O({elementType:pe,getSlotProps:g,externalSlotProps:m.content,ownerState:{},className:j(M.content,{[M.expanded]:L.expanded,[M.selected]:L.selected,[M.focused]:L.focused,[M.disabled]:L.disabled,[M.editing]:L.editing,[M.editable]:L.editable})}),me=o.iconContainer??tt,Oe=O({elementType:me,getSlotProps:I,externalSlotProps:m.iconContainer,ownerState:{},className:M.iconContainer}),fe=o.label??et,Ae=O({elementType:fe,getSlotProps:x,externalSlotProps:m.label,ownerState:{},className:M.label}),he=o.checkbox??it,It=O({elementType:he,getSlotProps:y,externalSlotProps:m.checkbox,ownerState:{},className:M.checkbox}),Fe=o.groupTransition??void 0,gt=O({elementType:Fe,getSlotProps:V,externalSlotProps:m.groupTransition,ownerState:{},className:M.groupTransition}),Be=o.labelInput??Ye,yt=O({elementType:Be,getSlotProps:_,externalSlotProps:m.labelInput,ownerState:{},className:M.labelInput}),je=o.dragAndDropOverlay??Pe,bt=O({elementType:je,getSlotProps:P,externalSlotProps:m.dragAndDropOverlay,ownerState:{},className:M.dragAndDropOverlay}),Ue=o.errorIcon??at,Tt=O({elementType:Ue,getSlotProps:A,externalSlotProps:m.errorIcon,ownerState:{},className:M.errorIcon}),ze=o.loadingIcon??rt,wt=O({elementType:ze,getSlotProps:E,externalSlotProps:m.loadingIcon,ownerState:{},className:M.loadingIcon});return S.jsx(qe,{...i(),children:S.jsxs(ce,{...K,children:[S.jsxs(pe,{...Ne,children:[S.jsxs(me,{...Oe,children:[L.error&&S.jsx(Ue,{...Tt}),L.loading?S.jsx(ze,{...wt}):S.jsx(Re,{status:L,slots:o,slotProps:m})]}),S.jsx(he,{...It}),L.editing?S.jsx(Be,{...yt}):S.jsx(fe,{...Ae}),S.jsx(je,{...bt})]}),c&&S.jsx(nt,{as:Fe,...gt})]})})});ke.propTypes={children:l.any,classes:l.object,className:l.string,disabled:l.bool,id:l.string,itemId:l.string.isRequired,label:l.node,onBlur:l.func,onFocus:un,onKeyDown:l.func,slotProps:l.object,slots:l.object,sx:l.oneOfType([l.arrayOf(l.oneOfType([l.func,l.object,l.bool])),l.func,l.object])};try{Qe.displayName="TreeItemRoot",Qe.__docgenInfo={description:"",displayName:"TreeItemRoot",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},sx:{defaultValue:null,description:"",name:"sx",required:!1,type:{name:"SxProps<Theme>"}}}}}catch{}try{Ze.displayName="TreeItemContent",Ze.__docgenInfo={description:"",displayName:"TreeItemContent",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},sx:{defaultValue:null,description:"",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},status:{defaultValue:null,description:"",name:"status",required:!0,type:{name:"UseTreeItemStatus"}}}}}catch{}try{et.displayName="TreeItemLabel",et.__docgenInfo={description:"",displayName:"TreeItemLabel",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},sx:{defaultValue:null,description:"",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},editable:{defaultValue:null,description:"",name:"editable",required:!1,type:{name:"boolean"}}}}}catch{}try{tt.displayName="TreeItemIconContainer",tt.__docgenInfo={description:"",displayName:"TreeItemIconContainer",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},sx:{defaultValue:null,description:"",name:"sx",required:!1,type:{name:"SxProps<Theme>"}}}}}catch{}try{nt.displayName="TreeItemGroupTransition",nt.__docgenInfo={description:"",displayName:"TreeItemGroupTransition",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The content node to be collapsed.",name:"children",required:!1,type:{name:"ReactNode"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},component:{defaultValue:null,description:`The component used for the root node.
Either a string to use a HTML element or a component.`,name:"component",required:!1,type:{name:"ElementType<TransitionProps, keyof IntrinsicElements>"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<CollapseClasses>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}},in:{defaultValue:null,description:"If `true`, the component will transition in.",name:"in",required:!1,type:{name:"boolean"}},orientation:{defaultValue:{value:"'vertical'"},description:"The transition orientation.",name:"orientation",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},collapsedSize:{defaultValue:{value:"'0px'"},description:"The width (horizontal) or height (vertical) of the container when collapsed.",name:"collapsedSize",required:!1,type:{name:"string | number"}},timeout:{defaultValue:{value:"duration.standard"},description:`The duration for the transition, in milliseconds.
You may specify a single timeout for all transitions, or individually with an object.

Set to 'auto' to automatically calculate transition time based on height.`,name:"timeout",required:!1,type:{name:'number | "auto" | { appear?: number; enter?: number; exit?: number | undefined; } | { appear?: number | undefined; enter?: number | undefined; exit?: number | undefined; } | undefined'}},easing:{defaultValue:null,description:`The transition timing function.
You may specify a single easing or a object containing enter and exit values.`,name:"easing",required:!1,type:{name:"string | { enter?: string; exit?: string; } | undefined"}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}}}}}catch{}try{at.displayName="TreeItemErrorContainer",at.__docgenInfo={description:"",displayName:"TreeItemErrorContainer",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},sx:{defaultValue:null,description:"",name:"sx",required:!1,type:{name:"SxProps<Theme>"}}}}}catch{}try{rt.displayName="TreeItemLoadingContainer",rt.__docgenInfo={description:"",displayName:"TreeItemLoadingContainer",props:{color:{defaultValue:{value:"'primary'"},description:`The color of the component.
It supports both default and custom theme colors, which can be added as shown in the
[palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).`,name:"color",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"info"'},{value:'"warning"'},{value:'"error"'},{value:'"inherit"'},{value:'"primary"'},{value:'"secondary"'}]}},variant:{defaultValue:{value:"'indeterminate'"},description:`The variant to use.
Use indeterminate when there is no progress value.`,name:"variant",required:!1,type:{name:"enum",value:[{value:'"indeterminate"'},{value:'"determinate"'}]}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<CircularProgressClasses>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}},value:{defaultValue:{value:"0"},description:`The value of the progress indicator for the determinate variant.
Value between 0 and 100.`,name:"value",required:!1,type:{name:"number"}},size:{defaultValue:{value:"40"},description:`The size of the component.
If using a number, the pixel unit is assumed.
If using a string, you need to provide the CSS unit, for example '3rem'.`,name:"size",required:!1,type:{name:"string | number"}},thickness:{defaultValue:{value:"3.6"},description:"The thickness of the circle.",name:"thickness",required:!1,type:{name:"number"}},disableShrink:{defaultValue:{value:"false"},description:"If `true`, the shrink animation is disabled.\nThis only works if variant is `indeterminate`.",name:"disableShrink",required:!1,type:{name:"boolean"}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}}}}}catch{}try{it.displayName="TreeItemCheckbox",it.__docgenInfo={description:"",displayName:"TreeItemCheckbox",props:{defaultChecked:{defaultValue:null,description:"The default checked state. Use when the component is not controlled.",name:"defaultChecked",required:!1,type:{name:"boolean"}},autoFocus:{defaultValue:null,description:"",name:"autoFocus",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"The id of the `input` element.",name:"id",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},tabIndex:{defaultValue:null,description:"",name:"tabIndex",required:!1,type:{name:"number"}},color:{defaultValue:{value:"'primary'"},description:`The color of the component.
It supports both default and custom theme colors, which can be added as shown in the
[palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).`,name:"color",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"info"'},{value:'"warning"'},{value:'"error"'},{value:'"default"'},{value:'"primary"'},{value:'"secondary"'}]}},onChange:{defaultValue:null,description:"Callback fired when the state is changed.\n@param event The event source of the callback.\nYou can pull out the new checked state by accessing `event.target.checked` (boolean).",name:"onChange",required:!1,type:{name:"((event: ChangeEvent<HTMLInputElement>, checked: boolean) => void)"}},icon:{defaultValue:{value:"<CheckBoxOutlineBlankIcon />"},description:"The icon to display when the component is unchecked.",name:"icon",required:!1,type:{name:"ReactNode"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<CheckboxClasses>"}},disabled:{defaultValue:{value:"false"},description:"If `true`, the component is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:"",name:"readOnly",required:!1,type:{name:"boolean"}},value:{defaultValue:null,description:`The value of the component. The DOM API casts this to a string.
The browser uses "on" as the default value.`,name:"value",required:!1,type:{name:"unknown"}},slotProps:{defaultValue:{value:"{}"},description:"The props used for each slot inside.",name:"slotProps",required:!1,type:{name:"{ root?: SlotProps<ElementType<SwitchBaseProps, keyof IntrinsicElements>, CheckboxRootSlotPropsOverrides, CheckboxOwnerState>; input?: SlotProps<...>; } | undefined"}},inputProps:{defaultValue:null,description:"[Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/input#attributes) applied to the `input` element.\n@deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.",name:"inputProps",required:!1,type:{name:"InputHTMLAttributes<HTMLInputElement>"}},action:{defaultValue:null,description:"A ref for imperative actions.\nIt currently only supports `focusVisible()` action.",name:"action",required:!1,type:{name:"Ref<ButtonBaseActions>"}},centerRipple:{defaultValue:{value:"false"},description:"If `true`, the ripples are centered.\nThey won't start at the cursor interaction position.",name:"centerRipple",required:!1,type:{name:"boolean"}},disableRipple:{defaultValue:{value:"false"},description:"If `true`, the ripple effect is disabled.",name:"disableRipple",required:!1,type:{name:"boolean"}},disableTouchRipple:{defaultValue:{value:"false"},description:"If `true`, the touch ripple effect is disabled.",name:"disableTouchRipple",required:!1,type:{name:"boolean"}},focusRipple:{defaultValue:{value:"false"},description:"If `true`, the base button will have a keyboard focus ripple.",name:"focusRipple",required:!1,type:{name:"boolean"}},focusVisibleClassName:{defaultValue:null,description:`This prop can help identify which element has keyboard focus.
The class name will be applied when the element gains the focus through keyboard interaction.
It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a \`focus-visible\` class to other components
if needed.`,name:"focusVisibleClassName",required:!1,type:{name:"string"}},LinkComponent:{defaultValue:{value:"'a'"},description:"The component used to render a link when the `href` prop is provided.",name:"LinkComponent",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},onFocusVisible:{defaultValue:null,description:"Callback fired when the component is focused with a keyboard.\nWe trigger a `onFocus` callback too.",name:"onFocusVisible",required:!1,type:{name:"FocusEventHandler<any>"}},TouchRippleProps:{defaultValue:null,description:"Props applied to the `TouchRipple` element.",name:"TouchRippleProps",required:!1,type:{name:"Partial<TouchRippleProps>"}},touchRippleRef:{defaultValue:null,description:"A ref that points to the `TouchRipple` element.",name:"touchRippleRef",required:!1,type:{name:"Ref<TouchRippleActions>"}},disableFocusRipple:{defaultValue:{value:"false"},description:"If `true`, the  keyboard focus ripple is disabled.",name:"disableFocusRipple",required:!1,type:{name:"boolean"}},edge:{defaultValue:{value:"false"},description:`If given, uses a negative margin to counteract the padding on one
side (this is often helpful for aligning the left or right
side of the icon with content above or below, without ruining the border
size and shape).`,name:"edge",required:!1,type:{name:'false | "end" | "start"'}},size:{defaultValue:{value:"'medium'"},description:"The size of the component.\n`small` is equivalent to the dense checkbox styling.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},slots:{defaultValue:{value:"{}"},description:"The components used for each slot inside.",name:"slots",required:!1,type:{name:"Partial<CheckboxSlots>"}},name:{defaultValue:null,description:"Name attribute of the `input` element.",name:"name",required:!1,type:{name:"string"}},checked:{defaultValue:null,description:"If `true`, the component is checked.",name:"checked",required:!1,type:{name:"boolean"}},required:{defaultValue:{value:"false"},description:"If `true`, the `input` element is required.",name:"required",required:!1,type:{name:"boolean"}},inputRef:{defaultValue:null,description:"Pass a ref to the `input` element.\n@deprecated Use `slotProps.input.ref` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.",name:"inputRef",required:!1,type:{name:"Ref<any>"}},checkedIcon:{defaultValue:{value:"<CheckBoxIcon />"},description:"The icon to display when the component is checked.",name:"checkedIcon",required:!1,type:{name:"ReactNode"}},indeterminate:{defaultValue:{value:"false"},description:"If `true`, the component appears indeterminate.\nThis does not set the native input element to indeterminate due\nto inconsistent behavior across browsers.\nHowever, we set a `data-indeterminate` attribute on the `input`.",name:"indeterminate",required:!1,type:{name:"boolean"}},indeterminateIcon:{defaultValue:{value:"<IndeterminateCheckBoxIcon />"},description:"The icon to display when the component is indeterminate.",name:"indeterminateIcon",required:!1,type:{name:"ReactNode"}},visible:{defaultValue:null,description:"",name:"visible",required:!1,type:{name:"boolean"}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}}}}}catch{}try{ke.displayName="TreeItem",ke.__docgenInfo={description:`
Demos:

- [Tree View](https://mui.com/x/react-tree-view/)

API:

- [TreeItem API](https://mui.com/x/api/tree-view/tree-item-2/)`,displayName:"TreeItem",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<TreeItemClasses>"}},slots:{defaultValue:{value:"{}"},description:"Overridable component slots.",name:"slots",required:!1,type:{name:"TreeItemSlots"}},slotProps:{defaultValue:{value:"{}"},description:"The props used for each component slot.",name:"slotProps",required:!1,type:{name:"TreeItemSlotProps"}},onFocus:{defaultValue:null,description:"This prop isn't supported.\nUse the `onItemFocus` callback on the tree if you need to monitor an item's focus.",name:"onFocus",required:!1,type:{name:"null"}},onBlur:{defaultValue:null,description:"Callback fired when the item root is blurred.",name:"onBlur",required:!1,type:{name:"TreeViewCancellableEventHandler<FocusEvent<HTMLLIElement, Element>>"}},onKeyDown:{defaultValue:null,description:"Callback fired when a key is pressed on the keyboard and the tree is in focus.",name:"onKeyDown",required:!1,type:{name:"TreeViewCancellableEventHandler<KeyboardEvent<HTMLLIElement>>"}},id:{defaultValue:null,description:"The id attribute of the item. If not provided, it will be generated.",name:"id",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The content of the component.",name:"children",required:!1,type:{name:"ReactNode"}},label:{defaultValue:null,description:"The label of the item.",name:"label",required:!1,type:{name:"ReactNode"}},disabled:{defaultValue:{value:"false"},description:"If `true`, the item is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},itemId:{defaultValue:null,description:`The id of the item.
Must be unique.`,name:"itemId",required:!0,type:{name:"string"}}}}}catch{}const Jt=T.createContext(null),Kn=T.memo(function({itemSlot:t,itemSlotProps:n,itemId:a}){const u=T.useContext(Jt),{store:d}=G(),h=q(d,b.itemMeta,a),p=q(d,b.itemOrderedChildrenIds,a),c=t??ke,{ownerState:o,...m}=O({elementType:c,externalSlotProps:n,additionalProps:{label:h?.label,id:h?.idAttribute,itemId:a},ownerState:{itemId:a,label:h?.label}});return S.jsx(c,{...m,children:p?.map(u)})},an);function ot(e){const{slots:t,slotProps:n}=e,{store:a}=G(),u=t?.item,d=n?.item,h=q(a,b.itemOrderedChildrenIds,null),p=T.useCallback(c=>S.jsx(Kn,{itemSlot:u,itemSlotProps:d,itemId:c},c),[u,d]);return S.jsx(Jt.Provider,{value:p,children:h.map(p)})}try{ot.displayName="RichTreeViewItems",ot.__docgenInfo={description:"",displayName:"RichTreeViewItems",props:{slots:{defaultValue:{value:"{}"},description:"Overridable component slots.",name:"slots",required:!1,type:{name:"RichTreeViewItemsSlots"}},slotProps:{defaultValue:{value:"{}"},description:"The props used for each component slot.",name:"slotProps",required:!1,type:{name:"RichTreeViewItemsSlotProps"}}}}}catch{}const qt=()=>T.useRef(void 0);try{qt.displayName="useTreeViewApiRef",qt.__docgenInfo={description:"Hook that instantiates a [[TreeViewApiRef]].",displayName:"useTreeViewApiRef",props:{}}}catch{}function Xn(e){return kt}function Jn(e){return ut("MuiRichTreeViewPro",e)}dt("MuiRichTreeViewPro",["root","item","itemContent","itemGroupTransition","itemIconContainer","itemLabel","itemCheckbox","itemLabelInput","itemDragAndDropOverlay","itemErrorIcon","itemLoadingIcon"]);const Yt=(e,t,n)=>{const a=b.itemMeta(e.state,t);return a.parentId===n?!0:a.parentId==null?!1:Yt(e,a.parentId,n)},Yn=(e,t)=>{if(typeof e=="number")return e;const n=/^(\d.+)(px)$/.exec(e);if(n)return parseFloat(n[1]);const a=document.createElement("div");a.style.width=e,a.style.position="absolute",t.appendChild(a);const u=a.offsetWidth;return t.removeChild(a),u},Qn=({itemChildrenIndentation:e,validActions:t,targetHeight:n,targetDepth:a,cursorX:u,cursorY:d,contentElement:h})=>{let p;const c=Yn(e,h);return t["move-to-parent"]&&u<c*a?p="move-to-parent":t["make-child"]?t["reorder-above"]&&d<1/4*n?p="reorder-above":t["reorder-below"]&&d>3/4*n?p="reorder-below":p="make-child":t["reorder-above"]&&d<1/2*n?p="reorder-above":t["reorder-below"]&&d>=1/2*n?p="reorder-below":p=null,p},Zn=({itemToMoveId:e,oldPosition:t,newPosition:n,prevState:a})=>{const u=a.itemMetaLookup[e],d=t.parentId??U,h=n.parentId??U,p={...a.itemOrderedChildrenIdsLookup};if(d===h){const i=[...p[d]];i.splice(t.index,1),i.splice(n.index,0,e),p[u.parentId??U]=i}else{const i=[...p[d]];i.splice(t.index,1),p[d]=i;const f=[...p[h]??[]];f.splice(n.index,0,e),p[h]=f}const c={...a.itemChildrenIndexesLookup};c[d]=ve(p[d]),h!==d&&(c[h]=ve(p[h]));const o={...a.itemMetaLookup};function m(i){const f=p[i].length>0;o[i].expandable!==f&&(o[i]={...o[i],expandable:f})}d!==U&&d!==h&&m(d),h!==U&&h!==d&&m(h);const r=n.parentId==null?0:o[h].depth+1;o[e]={...u,parentId:n.parentId,depth:r};const s=(i,f)=>{o[i]={...o[i],depth:f},p[i]?.forEach(g=>s(g,f+1))};return p[e]?.forEach(i=>s(i,r+1)),{...a,itemOrderedChildrenIdsLookup:p,itemChildrenIndexesLookup:c,itemMetaLookup:o}},ee={currentReorder:C(e=>e.itemsReordering.currentReorder),draggedItemProperties:C(e=>e.itemsReordering.currentReorder,b.itemMetaLookup,(e,t,n)=>{if(!e||e.targetItemId!==n||e.action==null)return null;const a=e.newPosition?.parentId==null?0:t[n].depth+1;return{newPosition:e.newPosition,action:e.action,targetDepth:a}}),isItemValidDropTarget:C((e,t)=>{const n=e.itemsReordering.currentReorder?.draggedItemId;return n!=null&&n!==t}),canItemBeReordered:C(e=>e.itemsReordering.isItemReorderable,z.isAnyItemBeingEdited,(e,t,n)=>!t&&e(n))},ea=()=>navigator.userAgent.toLowerCase().includes("android"),ta=({props:e})=>{const{instance:t,store:n}=G(),{itemId:a}=e,u=T.useRef(null),d=q(n,ee.draggedItemProperties,a),h=q(n,ee.canItemBeReordered,a),p=q(n,ee.isItemValidDropTarget,a);return{propsEnhancers:{root:({rootRefObject:c,contentRefObject:o,externalEventHandlers:m})=>h?{draggable:!0,onDragStart:f=>{if(m.onDragStart?.(f),f.defaultMuiPrevented||f.defaultPrevented||Ee(f.target,c.current))return;f.dataTransfer.effectAllowed="move",f.dataTransfer.setDragImage(o.current,0,0);const{types:g}=f.dataTransfer;ea()&&!g.includes("text/plain")&&!g.includes("text/uri-list")&&f.dataTransfer.setData("text/plain","android-fallback"),f.dataTransfer.setData("application/mui-x",""),t.startDraggingItem(a)},onDragOver:f=>{m.onDragOver?.(f),!f.defaultMuiPrevented&&f.preventDefault()},onDragEnd:f=>{if(m.onDragEnd?.(f),!f.defaultMuiPrevented){if(f.dataTransfer.dropEffect==="none"){t.cancelDraggingItem();return}t.completeDraggingItem(a)}}}:{},content:({externalEventHandlers:c,contentRefObject:o})=>p?{onDragEnter:s=>{c.onDragEnter?.(s),!s.defaultMuiPrevented&&(u.current=t.getDroppingTargetValidActions(a))},onDragOver:s=>{if(c.onDragOver?.(s),s.defaultMuiPrevented||u.current==null)return;const i=s.target.getBoundingClientRect(),f=s.clientY-i.top,g=s.clientX-i.left;t.setDragTargetItem({itemId:a,validActions:u.current,targetHeight:i.height,cursorY:f,cursorX:g,contentElement:o.current})}}:{},dragAndDropOverlay:()=>d?{action:d.action,style:{"--TreeView-targetDepth":d.targetDepth}}:{}}}},ue=({params:e,store:t})=>{const n=T.useCallback(c=>{if(!e.itemsReordering)return!1;const o=e.isItemReorderable;return o?o(c):!0},[e.itemsReordering,e.isItemReorderable]),a=T.useCallback(c=>{const o=ee.currentReorder(t.state);if(!o)throw new Error("There is no ongoing reordering.");if(c===o.draggedItemId)return{};const m=e.canMoveItemToNewPosition,r=b.itemMeta(t.state,c),s=b.itemIndex(t.state,r.id),i=b.itemMeta(t.state,o.draggedItemId),f=b.itemIndex(t.state,i.id),g=s===b.itemOrderedChildrenIds(t.state,r.parentId).length-1,I={parentId:i.parentId,index:f},y=_=>{let P;return _.parentId===I.parentId&&_.index===I.index?P=!1:m?P=m({itemId:o.draggedItemId,oldPosition:I,newPosition:_}):P=!0,P},x={"make-child":{parentId:r.id,index:0},"reorder-above":{parentId:r.parentId,index:r.parentId===i.parentId&&s>f?s-1:s},"reorder-below":!r.expandable||g?{parentId:r.parentId,index:r.parentId===i.parentId&&s>f?s:s+1}:null,"move-to-parent":r.parentId==null?null:{parentId:r.parentId,index:b.itemOrderedChildrenIds(t.state,r.parentId).length}},V={};return Object.keys(x).forEach(_=>{const P=x[_];P!=null&&y(P)&&(V[_]=P)}),V},[t,e.canMoveItemToNewPosition]),u=T.useCallback(c=>{z.isItemBeingEdited(t.state,c)||t.set("itemsReordering",{...t.state.itemsReordering,currentReorder:{targetItemId:c,draggedItemId:c,action:null,newPosition:null}})},[t]),d=T.useCallback(()=>{ee.currentReorder(t.state)!=null&&t.set("itemsReordering",{...t.state.itemsReordering,currentReorder:null})},[t]),h=T.useCallback(c=>{const o=ee.currentReorder(t.state);if(o==null||o.draggedItemId!==c)return;if(o.draggedItemId===o.targetItemId||o.action==null||o.newPosition==null){t.set("itemsReordering",{...t.state.itemsReordering,currentReorder:null});return}const m=b.itemMeta(t.state,o.draggedItemId),r={parentId:m.parentId,index:b.itemIndex(t.state,m.id)},s=o.newPosition;t.update({itemsReordering:{...t.state.itemsReordering,currentReorder:null},items:Zn({itemToMoveId:c,newPosition:s,oldPosition:r,prevState:t.state.items})});const i=e.onItemPositionChange;i?.({itemId:c,newPosition:s,oldPosition:r})},[t,e.onItemPositionChange]),p=T.useCallback(({itemId:c,validActions:o,targetHeight:m,cursorY:r,cursorX:s,contentElement:i})=>{const f=t.state.itemsReordering.currentReorder;if(f==null||Yt(t,c,f.draggedItemId))return;const g=Qn({itemChildrenIndentation:e.itemChildrenIndentation,validActions:o,targetHeight:m,targetDepth:t.state.items.itemMetaLookup[c].depth,cursorY:r,cursorX:s,contentElement:i}),I=g==null?null:o[g];f.targetItemId===c&&f.action===g&&f.newPosition?.parentId===I?.parentId&&f.newPosition?.index===I?.index||t.set("itemsReordering",{...t.state.itemsReordering,currentReorder:{...f,targetItemId:c,newPosition:I,action:g}})},[t,e.itemChildrenIndentation]);return J(()=>{t.set("itemsReordering",{...t.state.itemsReordering,isItemReorderable:e.itemsReordering?e.isItemReorderable??(()=>!0):()=>!1})},[t,e.itemsReordering,e.isItemReorderable]),{instance:{canItemBeDragged:n,getDroppingTargetValidActions:a,startDraggingItem:u,cancelDraggingItem:d,completeDraggingItem:h,setDragTargetItem:p}}};ue.itemPlugin=ta;ue.applyDefaultValuesToParams=({params:e})=>({...e,itemsReordering:e.itemsReordering??!1});ue.getInitialState=e=>({itemsReordering:{currentReorder:null,isItemReorderable:e.itemsReordering?e.isItemReorderable??(()=>!0):()=>!1}});ue.params={itemsReordering:!0,isItemReorderable:!0,canMoveItemToNewPosition:!0,onItemPositionChange:!0};class na{cache;ttl;constructor({ttl:t=3e5}){this.cache={},this.ttl=t}set(t,n){const a=Date.now()+this.ttl;this.cache[t]={value:n,expiry:a}}get(t){const n=this.cache[t];if(n)return Date.now()>n.expiry?(delete this.cache[t],-1):n.value}clear(){this.cache={}}}const aa=1/0;class ra{pendingRequests=new Set;queuedRequests=new Set;settledRequests=new Set;instance;maxConcurrentRequests;constructor(t,n=aa){this.instance=t,this.maxConcurrentRequests=n}processQueue=async()=>{if(this.queuedRequests.size===0||this.pendingRequests.size>=this.maxConcurrentRequests)return;const t=Math.min(this.maxConcurrentRequests-this.pendingRequests.size,this.queuedRequests.size);if(t===0)return;const n=Array.from(this.queuedRequests),a=[];for(let u=0;u<t;u+=1){const d=n[u];this.queuedRequests.delete(d),this.pendingRequests.add(d),a.push(this.instance.fetchItemChildren({itemId:d}))}await Promise.all(a)};queue=async t=>{t.forEach(n=>{this.queuedRequests.add(n)}),await this.processQueue()};setRequestSettled=async t=>{this.pendingRequests.delete(t),this.settledRequests.add(t),await this.processQueue()};clear=()=>{this.queuedRequests.clear(),Array.from(this.pendingRequests).forEach(t=>this.clearPendingRequest(t))};clearPendingRequest=async t=>{this.pendingRequests.delete(t),await this.processQueue()};getRequestStatus=t=>this.pendingRequests.has(t)?1:this.queuedRequests.has(t)?0:this.settledRequests.has(t)?2:3;getActiveRequestsCount=()=>this.pendingRequests.size+this.queuedRequests.size}const st={loading:{},errors:{}},ia={clear:()=>{},get:()=>{},set:()=>{}};function oa(e){return e===null?ia:e??new na({})}const ht=({instance:e,params:t,store:n})=>{const a=!!t.dataSource,u=T.useRef(!0),d=Vt(()=>new ra(e)).current,h=Vt(()=>oa(t.dataSourceCache)),p=N((i,f)=>{if(!a||Q.isItemLoading(n.state,i)===f)return;const g={...n.state.lazyLoading.dataSource.loading};f===!1?delete g[i]:g[i]=f,n.set("lazyLoading",{...n.state.lazyLoading,dataSource:{...n.state.lazyLoading.dataSource,loading:g}})}),c=(i,f)=>{if(!a)return;const g={...n.state.lazyLoading.dataSource.errors};f===null&&g[i]!==void 0?delete g[i]:g[i]=f,g[i]=f,n.set("lazyLoading",{...n.state.lazyLoading,dataSource:{...n.state.lazyLoading.dataSource,errors:g}})},o=N(()=>{a&&n.set("lazyLoading",{...n.state.lazyLoading,dataSource:st})}),m=N(async i=>{if(!a)return;const f=t.dataSource?.getChildrenCount||(()=>0),g=t.dataSource?.getTreeItems;if(!g)return;if(i){await d.queue(i);return}d.clear(),e.setTreeViewLoading(!0),Q.dataSource(n.state)!==st&&o();const I=h.current.get("root");if(I!==void 0&&I!==-1){e.addItems({items:I,depth:0,getChildrenCount:f}),e.setTreeViewLoading(!1);return}try{const y=await g();h.current.set("root",y),e.addItems({items:y,depth:0,getChildrenCount:f})}catch(y){e.addItems({items:[],depth:0,getChildrenCount:f}),e.setTreeViewError(y)}finally{e.setTreeViewLoading(!1)}}),r=N(async({itemId:i,forceRefresh:f})=>{if(!a)return;const g=t.dataSource?.getChildrenCount||(()=>0),I=t.dataSource?.getTreeItems;if(!I){d.clearPendingRequest(i);return}const y=b.itemMeta(n.state,i);if(!y){d.clearPendingRequest(i);return}const x=y.depth?y.depth+1:1;if(e.setDataSourceLoading(i,!0),!f){const V=h.current.get(i);if(V!==void 0&&V!==-1){d.setRequestSettled(i),e.addItems({items:V,depth:x,parentId:i,getChildrenCount:g}),e.setDataSourceLoading(i,!1);return}V===-1&&e.removeChildren(i)}Q.itemHasError(n.state,i)&&e.setDataSourceError(i,null);try{const V=await I(i);d.setRequestSettled(i),h.current.set(i,V),f&&e.removeChildren(i),e.addItems({items:V,depth:x,parentId:i,getChildrenCount:g})}catch(V){const _=V;e.setDataSourceError(i,_),e.removeChildren(i)}finally{e.setDataSourceLoading(i,!1),d.setRequestSettled(i)}}),s=N(i=>e.fetchItemChildren({itemId:i,forceRefresh:!0}));return Xt(e,"beforeItemToggleExpansion",async i=>{if(!a||!i.shouldBeExpanded)return;i.isExpansionPrevented=!0,await e.fetchItems([i.itemId]),Q.itemHasError(n.state,i.itemId)||(e.applyItemExpansion({itemId:i.itemId,shouldBeExpanded:!0,event:i.event}),R.isItemSelected(n.state,i.itemId)&&e.setItemSelection({event:i.event,itemId:i.itemId,keepExistingSelection:!0,shouldBeSelected:!0}))}),T.useEffect(()=>{if(a&&u.current){if(n.set("lazyLoading",{...n.state.lazyLoading,enabled:!0}),t.items.length){const i=t.dataSource?.getChildrenCount||(()=>0);e.addItems({items:t.items,depth:0,getChildrenCount:i})}else k.expandedItemsRaw(n.state).length>0&&e.resetItemExpansion(),e.fetchItems();u.current=!1}},[e,t.items,t.dataSource,a,n]),a&&e.preventItemUpdates(),{instance:{fetchItemChildren:r,fetchItems:m,updateItemChildren:s,setDataSourceLoading:p,setDataSourceError:c},publicAPI:{updateItemChildren:s}}};ht.getInitialState=()=>({lazyLoading:{enabled:!1,dataSource:st}});ht.params={dataSource:!0,dataSourceCache:!0};const sa=[$,de,te,De,ft,W,ht,ue],la=Xn(),da=e=>{const{classes:t}=e;return T.useMemo(()=>ct({root:["root"],item:["item"],itemContent:["itemContent"],itemGroupTransition:["itemGroupTransition"],itemIconContainer:["itemIconContainer"],itemLabel:["itemLabel"],itemLabelInput:["itemLabelInput"],itemCheckbox:["itemCheckbox"],itemDragAndDropOverlay:["itemDragAndDropOverlay"],itemErrorIcon:["itemErrorIcon"]},Jn,t),[t])},lt=F("ul",{name:"MuiRichTreeViewPro",slot:"Root"})({padding:0,margin:0,listStyle:"none",outline:0,position:"relative"}),Qt=T.forwardRef(function(t,n){const a=la({props:t,name:"MuiRichTreeViewPro"}),{slots:u,slotProps:d,...h}=a,{getRootProps:p,contextValue:c}=At({plugins:sa,rootRef:n,props:h}),o=da(a),m=u?.root??lt,r=O({elementType:m,externalSlotProps:d?.root,className:o.root,getSlotProps:p,ownerState:a});return S.jsx(Ve,{contextValue:c,classes:o,slots:u,slotProps:d,children:S.jsx(m,{...r,children:S.jsx(ot,{slots:u,slotProps:d})})})});Qt.propTypes={apiRef:l.shape({current:l.shape({focusItem:l.func,getItem:l.func,getItemDOMElement:l.func,getItemOrderedChildrenIds:l.func,getItemTree:l.func,getParentId:l.func,isItemExpanded:l.func,setEditedItem:l.func,setIsItemDisabled:l.func,setItemExpansion:l.func,setItemSelection:l.func,updateItemChildren:l.func,updateItemLabel:l.func})}),canMoveItemToNewPosition:l.func,checkboxSelection:l.bool,classes:l.object,className:l.string,dataSource:l.shape({getChildrenCount:l.func.isRequired,getTreeItems:l.func.isRequired}),dataSourceCache:l.shape({clear:l.func.isRequired,get:l.func.isRequired,set:l.func.isRequired}),defaultExpandedItems:l.arrayOf(l.string),defaultSelectedItems:l.any,disabledItemsFocusable:l.bool,disableSelection:l.bool,expandedItems:l.arrayOf(l.string),expansionTrigger:l.oneOf(["content","iconContainer"]),getItemChildren:l.func,getItemId:l.func,getItemLabel:l.func,id:l.string,isItemDisabled:l.func,isItemEditable:l.oneOfType([l.func,l.bool]),isItemReorderable:l.func,itemChildrenIndentation:l.oneOfType([l.number,l.string]),items:l.array.isRequired,itemsReordering:l.bool,multiSelect:l.bool,onExpandedItemsChange:l.func,onItemClick:l.func,onItemExpansionToggle:l.func,onItemFocus:l.func,onItemLabelChange:l.func,onItemPositionChange:l.func,onItemSelectionToggle:l.func,onSelectedItemsChange:l.func,selectedItems:l.any,selectionPropagation:l.shape({descendants:l.bool,parents:l.bool}),slotProps:l.object,slots:l.object,sx:l.oneOfType([l.arrayOf(l.oneOfType([l.func,l.object,l.bool])),l.func,l.object])};try{lt.displayName="RichTreeViewProRoot",lt.__docgenInfo={description:"",displayName:"RichTreeViewProRoot",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},sx:{defaultValue:null,description:"",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},ownerState:{defaultValue:null,description:"",name:"ownerState",required:!0,type:{name:"RichTreeViewProProps<any, any>"}}}}}catch{}const ua=rn(function(t,n){return S.jsx(Qt,{ref:n,...t})}),se=en.memo(ua);try{se.displayName="RichTreeViewExport",se.__docgenInfo={description:"",displayName:"RichTreeViewExport",props:{slots:{defaultValue:{value:"{}"},description:"Overridable component slots.",name:"slots",required:!1,type:{name:"RichTreeViewProSlots"}},slotProps:{defaultValue:{value:"{}"},description:"The props used for each component slot.",name:"slotProps",required:!1,type:{name:"RichTreeViewProSlotProps<R, Multiple>"}},apiRef:{defaultValue:null,description:"The ref object that allows Tree View manipulation. Can be instantiated with `useTreeViewApiRef()`.",name:"apiRef",required:!1,type:{name:"RichTreeViewProApiRef"}},id:{defaultValue:null,description:`This prop is used to help implement the accessibility logic.
If you don't provide this prop. It falls back to a randomly generated id.`,name:"id",required:!1,type:{name:"string"}},disabledItemsFocusable:{defaultValue:{value:"false"},description:"If `true`, will allow focus on disabled items.",name:"disabledItemsFocusable",required:!1,type:{name:"boolean"}},items:{defaultValue:null,description:"",name:"items",required:!0,type:{name:"readonly R[]"}},isItemDisabled:{defaultValue:null,description:`Used to determine if a given item should be disabled.
@template R
@param item The item to check.
@returns \`true\` if the item should be disabled.`,name:"isItemDisabled",required:!1,type:{name:"((item: R) => boolean)"}},getItemLabel:{defaultValue:{value:"(item) => item.label"},description:`Used to determine the string label for a given item.
@template R
@param item The item to check.
@returns The label of the item.`,name:"getItemLabel",required:!1,type:{name:"((item: R) => string)"}},getItemChildren:{defaultValue:{value:"(item) => item.children"},description:`Used to determine the children of a given item.
@template R
@param item The item to check.
@returns The children of the item.`,name:"getItemChildren",required:!1,type:{name:"((item: R) => R[])"}},getItemId:{defaultValue:{value:"(item) => item.id"},description:`Used to determine the id of a given item.
@template R
@param item The item to check.
@returns The id of the item.`,name:"getItemId",required:!1,type:{name:"((item: R) => string)"}},onItemClick:{defaultValue:null,description:"Callback fired when the `content` slot of a given Tree Item is clicked.\n@param event The DOM event that triggered the change.\n@param itemId The id of the focused item.",name:"onItemClick",required:!1,type:{name:"((event: MouseEvent<Element, MouseEvent>, itemId: string) => void)"}},itemChildrenIndentation:{defaultValue:{value:"12px"},description:`Horizontal indentation between an item and its children.
Examples: 24, "24px", "2rem", "2em".`,name:"itemChildrenIndentation",required:!1,type:{name:"string | number"}},expandedItems:{defaultValue:null,description:`Expanded item ids.
Used when the item's expansion is controlled.`,name:"expandedItems",required:!1,type:{name:"string[]"}},defaultExpandedItems:{defaultValue:{value:"[]"},description:`Expanded item ids.
Used when the item's expansion is not controlled.`,name:"defaultExpandedItems",required:!1,type:{name:"string[]"}},onExpandedItemsChange:{defaultValue:null,description:"Callback fired when Tree Items are expanded/collapsed.\n@param event The DOM event that triggered the change. Can be null when the change is caused by the `publicAPI.setItemExpansion()` method.\n@param itemIds The ids of the expanded items.",name:"onExpandedItemsChange",required:!1,type:{name:"((event: SyntheticEvent<Element, Event> | null, itemIds: string[]) => void)"}},onItemExpansionToggle:{defaultValue:null,description:"Callback fired when a Tree Item is expanded or collapsed.\n@param event The DOM event that triggered the change. Can be null when the change is caused by the `publicAPI.setItemExpansion()` method.\n@param itemId The itemId of the modified item.\n@param isExpanded `true` if the item has just been expanded, `false` if it has just been collapsed.",name:"onItemExpansionToggle",required:!1,type:{name:"((event: SyntheticEvent<Element, Event> | null, itemId: string, isExpanded: boolean) => void)"}},expansionTrigger:{defaultValue:{value:"'content'"},description:"The slot that triggers the item's expansion when clicked.",name:"expansionTrigger",required:!1,type:{name:"enum",value:[{value:'"content"'},{value:'"iconContainer"'}]}},onItemFocus:{defaultValue:null,description:`Callback fired when a given Tree Item is focused.
@param event The DOM event that triggered the change. **Warning**: This is a generic event not a focus event.
@param itemId The id of the focused item.`,name:"onItemFocus",required:!1,type:{name:"((event: SyntheticEvent<Element, Event> | null, itemId: string) => void)"}},disableSelection:{defaultValue:{value:"false"},description:"If `true` selection is disabled.",name:"disableSelection",required:!1,type:{name:"boolean"}},defaultSelectedItems:{defaultValue:{value:"[]"},description:"Selected item ids. (Uncontrolled)\nWhen `multiSelect` is true this takes an array of strings; when false (default) a string.",name:"defaultSelectedItems",required:!1,type:{name:"string | string[] | null"}},selectedItems:{defaultValue:null,description:"Selected item ids. (Controlled)\nWhen `multiSelect` is true this takes an array of strings; when false (default) a string.",name:"selectedItems",required:!1,type:{name:"string | string[] | null"}},multiSelect:{defaultValue:{value:"false"},description:"If `true`, `ctrl` and `shift` will trigger multiselect.",name:"multiSelect",required:!1,type:{name:"boolean"}},checkboxSelection:{defaultValue:{value:"false"},description:"If `true`, the Tree View renders a checkbox at the left of its label that allows selecting it.",name:"checkboxSelection",required:!1,type:{name:"boolean"}},selectionPropagation:{defaultValue:{value:"{ parents: false, descendants: false }"},description:"When `selectionPropagation.descendants` is set to `true`.\n\n- Selecting a parent selects all its descendants automatically.\n- Deselecting a parent deselects all its descendants automatically.\n\nWhen `selectionPropagation.parents` is set to `true`.\n\n- Selecting all the descendants of a parent selects the parent automatically.\n- Deselecting a descendant of a selected parent deselects the parent automatically.\n\nOnly works when `multiSelect` is `true`.\nOn the <SimpleTreeView />, only the expanded items are considered (since the collapsed item are not passed to the Tree View component at all)",name:"selectionPropagation",required:!1,type:{name:"TreeViewSelectionPropagation"}},onSelectedItemsChange:{defaultValue:null,description:"Callback fired when Tree Items are selected/deselected.\n@param event The DOM event that triggered the change. Can be null when the change is caused by the `publicAPI.setItemSelection()` method.\n@param itemIds The ids of the selected items.\nWhen `multiSelect` is `true`, this is an array of strings; when false (default) a string.",name:"onSelectedItemsChange",required:!1,type:{name:"((event: SyntheticEvent<Element, Event> | null, itemIds: TreeViewSelectionValue<Multiple>) => void)"}},onItemSelectionToggle:{defaultValue:null,description:"Callback fired when a Tree Item is selected or deselected.\n@param event The DOM event that triggered the change. Can be null when the change is caused by the `publicAPI.setItemSelection()` method.\n@param itemId The itemId of the modified item.\n@param isSelected `true` if the item has just been selected, `false` if it has just been deselected.",name:"onItemSelectionToggle",required:!1,type:{name:"((event: SyntheticEvent<Element, Event> | null, itemId: string, isSelected: boolean) => void)"}},onItemLabelChange:{defaultValue:null,description:`Callback fired when the label of an item changes.
@param itemId The id of the item that was edited.
@param newLabel The new label of the items.`,name:"onItemLabelChange",required:!1,type:{name:"((itemId: string, newLabel: string) => void)"}},isItemEditable:{defaultValue:{value:"() => false"},description:`Determine if a given item can be edited.
@template R
@param item The item to check.
@returns \`true\` if the item can be edited.`,name:"isItemEditable",required:!1,type:{name:"boolean | ((item: R) => boolean)"}},dataSource:{defaultValue:null,description:"The data source object.",name:"dataSource",required:!1,type:{name:"DataSource<R>"}},dataSourceCache:{defaultValue:null,description:"The data source cache object.",name:"dataSourceCache",required:!1,type:{name:"DataSourceCache"}},itemsReordering:{defaultValue:{value:"false"},description:"If `true`, the reordering of items is enabled.",name:"itemsReordering",required:!1,type:{name:"boolean"}},isItemReorderable:{defaultValue:{value:"() => true"},description:"Determine if a given item can be reordered.\n@param itemId The id of the item to check.\n@returns `true` if the item can be reordered.",name:"isItemReorderable",required:!1,type:{name:"((itemId: string) => boolean)"}},canMoveItemToNewPosition:{defaultValue:null,description:`Used to determine if a given item can move to some new position.
@param params The params describing the item re-ordering.
@param params.itemId The id of the item that is being moved to a new position.
@param params.oldPosition The old position of the item.
@param params.newPosition The new position of the item.
@returns \`true\` if the item can move to the new position.`,name:"canMoveItemToNewPosition",required:!1,type:{name:"((params: { itemId: string; oldPosition: TreeViewItemReorderPosition; newPosition: TreeViewItemReorderPosition; }) => boolean)"}},onItemPositionChange:{defaultValue:null,description:`Callback fired when a Tree Item is moved in the tree.
@param params The params describing the item re-ordering.
@param params.itemId The id of the item moved.
@param params.oldPosition The old position of the item.
@param params.newPosition The new position of the item.`,name:"onItemPositionChange",required:!1,type:{name:"((params: { itemId: string; oldPosition: TreeViewItemReorderPosition; newPosition: TreeViewItemReorderPosition; }) => void)"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<RichTreeViewProClasses>"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}}}}}catch{}try{SimpleTreeViewRoot.displayName="SimpleTreeViewRoot",SimpleTreeViewRoot.__docgenInfo={description:"",displayName:"SimpleTreeViewRoot",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},sx:{defaultValue:null,description:"",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},ownerState:{defaultValue:null,description:"",name:"ownerState",required:!0,type:{name:"SimpleTreeViewProps<any>"}}}}}catch{}try{getSimpleTreeViewUtilityClass.displayName="getSimpleTreeViewUtilityClass",getSimpleTreeViewUtilityClass.__docgenInfo={description:"",displayName:"getSimpleTreeViewUtilityClass",props:{}}}catch{}try{TreeItemRoot.displayName="TreeItemRoot",TreeItemRoot.__docgenInfo={description:"",displayName:"TreeItemRoot",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},sx:{defaultValue:null,description:"",name:"sx",required:!1,type:{name:"SxProps<Theme>"}}}}}catch{}try{TreeItemContent.displayName="TreeItemContent",TreeItemContent.__docgenInfo={description:"",displayName:"TreeItemContent",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},sx:{defaultValue:null,description:"",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},status:{defaultValue:null,description:"",name:"status",required:!0,type:{name:"UseTreeItemStatus"}}}}}catch{}try{TreeItemIconContainer.displayName="TreeItemIconContainer",TreeItemIconContainer.__docgenInfo={description:"",displayName:"TreeItemIconContainer",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},sx:{defaultValue:null,description:"",name:"sx",required:!1,type:{name:"SxProps<Theme>"}}}}}catch{}try{TreeItemGroupTransition.displayName="TreeItemGroupTransition",TreeItemGroupTransition.__docgenInfo={description:"",displayName:"TreeItemGroupTransition",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The content node to be collapsed.",name:"children",required:!1,type:{name:"ReactNode"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},component:{defaultValue:null,description:`The component used for the root node.
Either a string to use a HTML element or a component.`,name:"component",required:!1,type:{name:"ElementType<TransitionProps, keyof IntrinsicElements>"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<CollapseClasses>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}},in:{defaultValue:null,description:"If `true`, the component will transition in.",name:"in",required:!1,type:{name:"boolean"}},orientation:{defaultValue:{value:"'vertical'"},description:"The transition orientation.",name:"orientation",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},collapsedSize:{defaultValue:{value:"'0px'"},description:"The width (horizontal) or height (vertical) of the container when collapsed.",name:"collapsedSize",required:!1,type:{name:"string | number"}},timeout:{defaultValue:{value:"duration.standard"},description:`The duration for the transition, in milliseconds.
You may specify a single timeout for all transitions, or individually with an object.

Set to 'auto' to automatically calculate transition time based on height.`,name:"timeout",required:!1,type:{name:'number | "auto" | { appear?: number; enter?: number; exit?: number | undefined; } | { appear?: number | undefined; enter?: number | undefined; exit?: number | undefined; } | undefined'}},easing:{defaultValue:null,description:`The transition timing function.
You may specify a single easing or a object containing enter and exit values.`,name:"easing",required:!1,type:{name:"string | { enter?: string; exit?: string; } | undefined"}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}}}}}catch{}try{TreeItemCheckbox.displayName="TreeItemCheckbox",TreeItemCheckbox.__docgenInfo={description:"",displayName:"TreeItemCheckbox",props:{defaultChecked:{defaultValue:null,description:"The default checked state. Use when the component is not controlled.",name:"defaultChecked",required:!1,type:{name:"boolean"}},autoFocus:{defaultValue:null,description:"",name:"autoFocus",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"The id of the `input` element.",name:"id",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},tabIndex:{defaultValue:null,description:"",name:"tabIndex",required:!1,type:{name:"number"}},color:{defaultValue:{value:"'primary'"},description:`The color of the component.
It supports both default and custom theme colors, which can be added as shown in the
[palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).`,name:"color",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"info"'},{value:'"warning"'},{value:'"error"'},{value:'"default"'},{value:'"primary"'},{value:'"secondary"'}]}},onChange:{defaultValue:null,description:"Callback fired when the state is changed.\n@param event The event source of the callback.\nYou can pull out the new checked state by accessing `event.target.checked` (boolean).",name:"onChange",required:!1,type:{name:"((event: ChangeEvent<HTMLInputElement>, checked: boolean) => void)"}},icon:{defaultValue:{value:"<CheckBoxOutlineBlankIcon />"},description:"The icon to display when the component is unchecked.",name:"icon",required:!1,type:{name:"ReactNode"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<CheckboxClasses>"}},disabled:{defaultValue:{value:"false"},description:"If `true`, the component is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},readOnly:{defaultValue:null,description:"",name:"readOnly",required:!1,type:{name:"boolean"}},value:{defaultValue:null,description:`The value of the component. The DOM API casts this to a string.
The browser uses "on" as the default value.`,name:"value",required:!1,type:{name:"unknown"}},slotProps:{defaultValue:{value:"{}"},description:"The props used for each slot inside.",name:"slotProps",required:!1,type:{name:"{ root?: SlotProps<ElementType<SwitchBaseProps, keyof IntrinsicElements>, CheckboxRootSlotPropsOverrides, CheckboxOwnerState>; input?: SlotProps<...>; } | undefined"}},inputProps:{defaultValue:null,description:"[Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/input#attributes) applied to the `input` element.\n@deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.",name:"inputProps",required:!1,type:{name:"InputHTMLAttributes<HTMLInputElement>"}},action:{defaultValue:null,description:"A ref for imperative actions.\nIt currently only supports `focusVisible()` action.",name:"action",required:!1,type:{name:"Ref<ButtonBaseActions>"}},centerRipple:{defaultValue:{value:"false"},description:"If `true`, the ripples are centered.\nThey won't start at the cursor interaction position.",name:"centerRipple",required:!1,type:{name:"boolean"}},disableRipple:{defaultValue:{value:"false"},description:"If `true`, the ripple effect is disabled.",name:"disableRipple",required:!1,type:{name:"boolean"}},disableTouchRipple:{defaultValue:{value:"false"},description:"If `true`, the touch ripple effect is disabled.",name:"disableTouchRipple",required:!1,type:{name:"boolean"}},focusRipple:{defaultValue:{value:"false"},description:"If `true`, the base button will have a keyboard focus ripple.",name:"focusRipple",required:!1,type:{name:"boolean"}},focusVisibleClassName:{defaultValue:null,description:`This prop can help identify which element has keyboard focus.
The class name will be applied when the element gains the focus through keyboard interaction.
It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a \`focus-visible\` class to other components
if needed.`,name:"focusVisibleClassName",required:!1,type:{name:"string"}},LinkComponent:{defaultValue:{value:"'a'"},description:"The component used to render a link when the `href` prop is provided.",name:"LinkComponent",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},onFocusVisible:{defaultValue:null,description:"Callback fired when the component is focused with a keyboard.\nWe trigger a `onFocus` callback too.",name:"onFocusVisible",required:!1,type:{name:"FocusEventHandler<any>"}},TouchRippleProps:{defaultValue:null,description:"Props applied to the `TouchRipple` element.",name:"TouchRippleProps",required:!1,type:{name:"Partial<TouchRippleProps>"}},touchRippleRef:{defaultValue:null,description:"A ref that points to the `TouchRipple` element.",name:"touchRippleRef",required:!1,type:{name:"Ref<TouchRippleActions>"}},disableFocusRipple:{defaultValue:{value:"false"},description:"If `true`, the  keyboard focus ripple is disabled.",name:"disableFocusRipple",required:!1,type:{name:"boolean"}},edge:{defaultValue:{value:"false"},description:`If given, uses a negative margin to counteract the padding on one
side (this is often helpful for aligning the left or right
side of the icon with content above or below, without ruining the border
size and shape).`,name:"edge",required:!1,type:{name:'false | "end" | "start"'}},size:{defaultValue:{value:"'medium'"},description:"The size of the component.\n`small` is equivalent to the dense checkbox styling.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"medium"'},{value:'"large"'}]}},slots:{defaultValue:{value:"{}"},description:"The components used for each slot inside.",name:"slots",required:!1,type:{name:"Partial<CheckboxSlots>"}},name:{defaultValue:null,description:"Name attribute of the `input` element.",name:"name",required:!1,type:{name:"string"}},checked:{defaultValue:null,description:"If `true`, the component is checked.",name:"checked",required:!1,type:{name:"boolean"}},required:{defaultValue:{value:"false"},description:"If `true`, the `input` element is required.",name:"required",required:!1,type:{name:"boolean"}},inputRef:{defaultValue:null,description:"Pass a ref to the `input` element.\n@deprecated Use `slotProps.input.ref` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.",name:"inputRef",required:!1,type:{name:"Ref<any>"}},checkedIcon:{defaultValue:{value:"<CheckBoxIcon />"},description:"The icon to display when the component is checked.",name:"checkedIcon",required:!1,type:{name:"ReactNode"}},indeterminate:{defaultValue:{value:"false"},description:"If `true`, the component appears indeterminate.\nThis does not set the native input element to indeterminate due\nto inconsistent behavior across browsers.\nHowever, we set a `data-indeterminate` attribute on the `input`.",name:"indeterminate",required:!1,type:{name:"boolean"}},indeterminateIcon:{defaultValue:{value:"<IndeterminateCheckBoxIcon />"},description:"The icon to display when the component is indeterminate.",name:"indeterminateIcon",required:!1,type:{name:"ReactNode"}},visible:{defaultValue:null,description:"",name:"visible",required:!1,type:{name:"boolean"}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}}}}}catch{}try{TreeItemLabel.displayName="TreeItemLabel",TreeItemLabel.__docgenInfo={description:"",displayName:"TreeItemLabel",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},sx:{defaultValue:null,description:"",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},editable:{defaultValue:null,description:"",name:"editable",required:!1,type:{name:"boolean"}}}}}catch{}try{getTreeItemUtilityClass.displayName="getTreeItemUtilityClass",getTreeItemUtilityClass.__docgenInfo={description:"",displayName:"getTreeItemUtilityClass",props:{}}}catch{}try{useTreeItem.displayName="useTreeItem",useTreeItem.__docgenInfo={description:"",displayName:"useTreeItem",props:{id:{defaultValue:null,description:"The id attribute of the item. If not provided, it will be generated.",name:"id",required:!1,type:{name:"string"}},disabled:{defaultValue:{value:"false"},description:"If `true`, the item is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},itemId:{defaultValue:null,description:`The id of the item.
Must be unique.`,name:"itemId",required:!0,type:{name:"string"}},label:{defaultValue:null,description:"The label of the item.",name:"label",required:!1,type:{name:"ReactNode"}},rootRef:{defaultValue:null,description:"",name:"rootRef",required:!1,type:{name:"Ref<HTMLLIElement>"}},children:{defaultValue:null,description:"The content of the component.",name:"children",required:!1,type:{name:"ReactNode"}}}}}catch{}try{TreeItemIcon.displayName="TreeItemIcon",TreeItemIcon.__docgenInfo={description:"",displayName:"TreeItemIcon",props:{status:{defaultValue:null,description:"",name:"status",required:!0,type:{name:"UseTreeItemStatus"}},slots:{defaultValue:{value:"{}"},description:"Overridable component slots.",name:"slots",required:!1,type:{name:"TreeItemIconSlots"}},slotProps:{defaultValue:{value:"{}"},description:"The props used for each component slot.",name:"slotProps",required:!1,type:{name:"TreeItemIconSlotProps"}}}}}catch{}try{TreeItemProvider.displayName="TreeItemProvider",TreeItemProvider.__docgenInfo={description:"",displayName:"TreeItemProvider",props:{itemId:{defaultValue:null,description:"",name:"itemId",required:!0,type:{name:"string"}},id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string | undefined"}}}}}catch{}try{TreeItemDragAndDropOverlay.displayName="TreeItemDragAndDropOverlay",TreeItemDragAndDropOverlay.__docgenInfo={description:"",displayName:"TreeItemDragAndDropOverlay",props:{action:{defaultValue:null,description:"",name:"action",required:!1,type:{name:"enum",value:[{value:'"make-child"'},{value:'"move-to-parent"'},{value:'"reorder-above"'},{value:'"reorder-below"'}]}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}}}}}catch{}try{TreeItemLabelInput.displayName="TreeItemLabelInput",TreeItemLabelInput.__docgenInfo={description:"",displayName:"TreeItemLabelInput",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},sx:{defaultValue:null,description:"",name:"sx",required:!1,type:{name:"SxProps<Theme>"}}}}}catch{}try{TreeViewExpandIcon.displayName="TreeViewExpandIcon",TreeViewExpandIcon.__docgenInfo={description:"",displayName:"TreeViewExpandIcon",props:{component:{defaultValue:null,description:`The component used for the root node.
Either a string to use a HTML element or a component.`,name:"component",required:!0,type:{name:"ElementType<any, keyof IntrinsicElements>"}},children:{defaultValue:null,description:"Node passed into the SVG element.",name:"children",required:!1,type:{name:"any"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"(Partial<SvgIconClasses> & Partial<ClassNameMap<never>>)"}},color:{defaultValue:{value:"'inherit'"},description:`The color of the component.
It supports both default and custom theme colors, which can be added as shown in the
[palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
You can use the \`htmlColor\` prop to apply a color attribute to the SVG element.`,name:"color",required:!1,type:{name:"any"}},fontSize:{defaultValue:{value:"'medium'"},description:"The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.",name:"fontSize",required:!1,type:{name:"any"}},htmlColor:{defaultValue:null,description:"Applies a color attribute to the SVG element.",name:"htmlColor",required:!1,type:{name:"any"}},inheritViewBox:{defaultValue:{value:"false"},description:"If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`\nprop will be ignored.\nUseful when you want to reference a custom `component` and have `SvgIcon` pass that\n`component`'s viewBox to the root node.",name:"inheritViewBox",required:!1,type:{name:"any"}},shapeRendering:{defaultValue:null,description:`The shape-rendering attribute. The behavior of the different options is described on the
[MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Reference/Attribute/shape-rendering).
If you are having issues with blurry icons you should investigate this prop.`,name:"shapeRendering",required:!1,type:{name:"any"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"any"}},titleAccess:{defaultValue:null,description:`Provides a human-readable title for the element that contains it.
https://www.w3.org/TR/SVG-access/#Equivalent`,name:"titleAccess",required:!1,type:{name:"any"}},viewBox:{defaultValue:{value:"'0 0 24 24'"},description:`Allows you to redefine what the coordinates without units mean inside an SVG element.
For example, if the SVG element is 500 (width) by 200 (height),
and you pass viewBox="0 0 50 20",
this means that the coordinates inside the SVG will go from the top left corner (0,0)
to bottom right (50,20) and each unit will be worth 10px.`,name:"viewBox",required:!1,type:{name:"any"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}}}}}catch{}try{TreeViewCollapseIcon.displayName="TreeViewCollapseIcon",TreeViewCollapseIcon.__docgenInfo={description:"",displayName:"TreeViewCollapseIcon",props:{component:{defaultValue:null,description:`The component used for the root node.
Either a string to use a HTML element or a component.`,name:"component",required:!0,type:{name:"ElementType<any, keyof IntrinsicElements>"}},children:{defaultValue:null,description:"Node passed into the SVG element.",name:"children",required:!1,type:{name:"any"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"(Partial<SvgIconClasses> & Partial<ClassNameMap<never>>)"}},color:{defaultValue:{value:"'inherit'"},description:`The color of the component.
It supports both default and custom theme colors, which can be added as shown in the
[palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
You can use the \`htmlColor\` prop to apply a color attribute to the SVG element.`,name:"color",required:!1,type:{name:"any"}},fontSize:{defaultValue:{value:"'medium'"},description:"The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.",name:"fontSize",required:!1,type:{name:"any"}},htmlColor:{defaultValue:null,description:"Applies a color attribute to the SVG element.",name:"htmlColor",required:!1,type:{name:"any"}},inheritViewBox:{defaultValue:{value:"false"},description:"If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`\nprop will be ignored.\nUseful when you want to reference a custom `component` and have `SvgIcon` pass that\n`component`'s viewBox to the root node.",name:"inheritViewBox",required:!1,type:{name:"any"}},shapeRendering:{defaultValue:null,description:`The shape-rendering attribute. The behavior of the different options is described on the
[MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Reference/Attribute/shape-rendering).
If you are having issues with blurry icons you should investigate this prop.`,name:"shapeRendering",required:!1,type:{name:"any"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"any"}},titleAccess:{defaultValue:null,description:`Provides a human-readable title for the element that contains it.
https://www.w3.org/TR/SVG-access/#Equivalent`,name:"titleAccess",required:!1,type:{name:"any"}},viewBox:{defaultValue:{value:"'0 0 24 24'"},description:`Allows you to redefine what the coordinates without units mean inside an SVG element.
For example, if the SVG element is 500 (width) by 200 (height),
and you pass viewBox="0 0 50 20",
this means that the coordinates inside the SVG will go from the top left corner (0,0)
to bottom right (50,20) and each unit will be worth 10px.`,name:"viewBox",required:!1,type:{name:"any"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}}}}}catch{}try{useTreeViewApiRef.displayName="useTreeViewApiRef",useTreeViewApiRef.__docgenInfo={description:"Hook that instantiates a [[TreeViewApiRef]].",displayName:"useTreeViewApiRef",props:{}}}catch{}try{useTreeItemUtils.displayName="useTreeItemUtils",useTreeItemUtils.__docgenInfo={description:"",displayName:"useTreeItemUtils",props:{itemId:{defaultValue:null,description:"",name:"itemId",required:!0,type:{name:"string"}}}}}catch{}try{useTreeItemModel.displayName="useTreeItemModel",useTreeItemModel.__docgenInfo={description:"",displayName:"useTreeItemModel",props:{}}}catch{}const Ka={title:"Components/Rich Tree View",component:se,tags:["autodocs"]},Z=[{id:"1",label:"Amy Harris",childrenCount:Math.round(Math.random()*10)+1},{id:"2",label:"Sam Smith",childrenCount:Math.round(Math.random()*10)+1},{id:"3",label:"Jordan Miles",childrenCount:Math.round(Math.random()*10)+1},{id:"4",label:"Amalia Brown",childrenCount:Math.round(Math.random()*10)+1}],ca=async()=>{const e=Math.round(Math.random()*10)+1,t=Array.from({length:e},()=>({id:dn(),label:`Row ${Math.round(Math.random()*1e3)+1}`,childrenCount:e}));return new Promise(n=>{setTimeout(()=>{n(t)},1e3)})},ge={args:{},render:()=>S.jsx(Lt,{sx:{height:300},children:S.jsx(se,{items:Z,dataSource:{getChildrenCount:e=>e?.childrenCount,getTreeItems:ca}})})},ye={args:{},render:e=>S.jsx(Lt,{sx:{minHeight:352,minWidth:300},children:S.jsx(se,{...e,items:Z,itemsReordering:!0,defaultExpandedItems:["1","2","3","4"]})})};Z.parameters={...Z.parameters,docs:{...Z.parameters?.docs,source:{originalSource:`[{
  id: "1",
  label: "Amy Harris",
  childrenCount: Math.round(Math.random() * 10) + 1
}, {
  id: "2",
  label: "Sam Smith",
  childrenCount: Math.round(Math.random() * 10) + 1
}, {
  id: "3",
  label: "Jordan Miles",
  childrenCount: Math.round(Math.random() * 10) + 1
}, {
  id: "4",
  label: "Amalia Brown",
  childrenCount: Math.round(Math.random() * 10) + 1
}]`,...Z.parameters?.docs?.source}}};ge.parameters={...ge.parameters,docs:{...ge.parameters?.docs,source:{originalSource:`{
  args: {},
  render: () => {
    return <Box sx={{
      height: 300
    }}>
        <RichTreeView items={initialItems} dataSource={{
        getChildrenCount: item => item?.childrenCount as number,
        getTreeItems: fetchData
      }} />
      </Box>;
  }
}`,...ge.parameters?.docs?.source}}};ye.parameters={...ye.parameters,docs:{...ye.parameters?.docs,source:{originalSource:`{
  args: {},
  render: (props: RichTreeViewProps<any, any>) => <Box sx={{
    minHeight: 352,
    minWidth: 300
  }}>
      <RichTreeView {...props} items={initialItems} itemsReordering defaultExpandedItems={["1", "2", "3", "4"]} />
    </Box>
}`,...ye.parameters?.docs?.source}}};const Xa=["initialItems","Base","DragAndDrop"];export{ge as Base,ye as DragAndDrop,Xa as __namedExportsOrder,Ka as default,Z as initialItems};
