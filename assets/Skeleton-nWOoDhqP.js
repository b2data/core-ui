import{R as a,j as l}from"./iframe-BjsjcTCH.js";import{S as i}from"./Skeleton-BcBMH9N7.js";const t=a.forwardRef((e,n)=>l.jsx(i,{ref:n,...e}));try{t.displayName="Skeleton",t.__docgenInfo={description:"",displayName:"Skeleton",props:{variant:{defaultValue:{value:"text"},description:"The variant to use.",name:"variant",required:!1,type:{name:"enum",value:[{value:'"text"'},{value:'"circular"'},{value:'"rounded"'},{value:'"rectangular"'}]}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},height:{defaultValue:null,description:`Height of the skeleton.
Useful when you don't want to adapt the skeleton to a text element but for instance a card.`,name:"height",required:!1,type:{name:"string | number"}},width:{defaultValue:null,description:`Width of the skeleton.
Useful when the skeleton is inside an inline element with no width of its own.`,name:"width",required:!1,type:{name:"string | number"}}}}}catch{}export{t as S};
