name: Build Package

on:
  push:
    branches: ['main']

jobs:
  test: 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 24
        registry-url: https://npm.pkg.github.com/

    - name: Enable Corepack
      run: corepack enable

    - name: Setup yarnrc
      run: |
        echo "nodeLinker: node-modules" >> .yarnrc.yml
    
    - name: Install and test
      run: |
        yarn install
        yarn lint
        yarn test

  publish:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 24
          registry-url: https://npm.pkg.github.com/

      - name: Enable Corepack
        run: corepack enable

      - name: Setup yarnrc
        run: |
          echo "nodeLinker: node-modules" >> .yarnrc.yml

      - name: Setup npmrc for publishing
        run: |
          echo "@b2data:registry=https://npm.pkg.github.com" > .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.REPO_SECRET }}" >> .npmrc

      - name: Publish package
        run: |
          yarn install
          yarn compile
          npm pack
          npm publish

  deploy:
    needs: publish
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 24
      - name: Enable Corepack
        run: corepack enable
  
      - name: Setup yarnrc
        run: |
          echo "nodeLinker: node-modules" >> .yarnrc.yml

      - run: yarn install
      - run: yarn storybook:prepare
      - uses: crazy-max/ghaction-github-pages@v3
        with:
          target_branch: gh-pages
          build_dir: storybook-static
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_SECRET }}
  
  tag:
    needs: publish
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Create tag
        run: |
          PACKAGE_VERSION=$(cat package.json| grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[", ]//g')
          git tag v$PACKAGE_VERSION
          git push --tags